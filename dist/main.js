!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("docx")):"function"==typeof define&&define.amd?define(["docx"],t):"object"==typeof exports?exports.QuillToWord=t(require("docx")):e.QuillToWord=t(e.docx)}(self,(function(e){return t={190:e=>{self,e.exports=(()=>{"use strict";var e={607:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseQuillDelta=void 0;let r=!1;function n(e,t){e.insert.video||e.insert.image?function(e,t){t.paragraphs.push({embed:e.insert}),r=!1,i(t)}(e,t):e.insert.formula?function(e,t){var r;0===t.paragraphs.length&&i(t),null===(r=t.paragraphs[t.paragraphs.length-1].textRuns)||void 0===r||r.push({formula:e.insert.formula,attributes:e.attributes})}(e,t):"\n"===e.insert?function(e,t){e.attributes&&(t.paragraphs[t.paragraphs.length-1].attributes=e.attributes,"ordered"===e.attributes.list?r||(t.setup.numberedLists++,r=!0):r=!1),i(t)}(e,t):function(e,t){if(0===t.paragraphs.length&&i(t),e.insert.match(/\n/)){const n=e.insert.split(/(\n)/);for(const e of n)"\n"===e?(i(t),r=!1):o(e,t)}else o(e.insert,t,e.attributes)}(e,t)}function i(e){e.paragraphs.push({textRuns:[]})}function o(e,t,r){var n,i;r?(null===(n=t.paragraphs[t.paragraphs.length-1].textRuns)||void 0===n||n.push({text:e,attributes:r}),r.link&&t.setup.hyperlinks.push({text:e,link:r.link})):null===(i=t.paragraphs[t.paragraphs.length-1].textRuns)||void 0===i||i.push({text:e})}t.parseQuillDelta=function(e){r=!1;const t={paragraphs:[],setup:{numberedLists:0,hyperlinks:[]}};for(const r of e.ops)n(r,t);return t}}},t={};return function r(n){if(t[n])return t[n].exports;var i=t[n]={exports:{}};return e[n](i,i.exports,r),i.exports}(607)})()},829:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaultNumbering=t.customLevels=t.defaultStyles=void 0;const n=r(687);t.defaultStyles=[{id:"normal",name:"Normal",next:"normal",basedOn:"normal",quickFormat:!0,run:{size:24},paragraph:{spacing:{line:480,before:0,after:0}}},{id:"header_1",name:"Heading 1",next:"normal",quickFormat:!0,run:{font:"Calibri",size:30,bold:!0},paragraph:{spacing:{before:300,after:200}}},{id:"header_2",name:"Heading 2",basedOn:"normal",next:"normal",quickFormat:!0,run:{font:"Calibri",size:26,bold:!0},paragraph:{spacing:{before:200,after:100}}},{id:"list_paragraph",name:"List Paragraph",basedOn:"normal",quickFormat:!0,run:{size:24}},{id:"code_block",name:"Code Block",basedOn:"normal",quickFormat:!0,run:{size:24,font:"Courier New"},paragraph:{indent:{left:720,right:720}}},{id:"block_quote",name:"Block Quote",basedOn:"normal",quickFormat:!0,run:{italics:!0},paragraph:{indent:{left:540},border:{left:{size:12,space:28,color:"333333",value:"single"}}}}],t.customLevels=[{level:0,format:"decimal",text:"%1.",alignment:n.AlignmentType.LEFT,style:{paragraph:{indent:{left:720,hanging:360}}}},{level:1,format:"lowerLetter",text:"%2.",alignment:n.AlignmentType.LEFT,style:{paragraph:{indent:{left:1440,hanging:360}}}},{level:2,format:"lowerRoman",text:"%3.",alignment:n.AlignmentType.LEFT,style:{paragraph:{indent:{left:2160,hanging:360}}}},{level:3,format:"decimal",text:"%4.",alignment:n.AlignmentType.LEFT,style:{paragraph:{indent:{left:2880,hanging:360}}}},{level:4,format:"lowerLetter",text:"%5.",alignment:n.AlignmentType.LEFT,style:{paragraph:{indent:{left:3600,hanging:360}}}},{level:3,format:"lowerRoman",text:"%5.",alignment:n.AlignmentType.LEFT,style:{paragraph:{indent:{left:4320,hanging:360}}}}],t.defaultNumbering={config:[{reference:"default-numbering",levels:t.customLevels}]}},35:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return i(t,e),t},a=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(i,o){function a(e){try{s(n.next(e))}catch(e){o(e)}}function l(e){try{s(n.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,l)}s((n=n.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.generateWord=void 0;const l=r(190),s=o(r(687)),u=r(687),d=r(829);let p=0,c=-1,f=d.defaultStyles;function v(e,t,r){e.paragraph&&(f[r].paragraph=e.paragraph),e.run&&(f[r].run=e.run)}function g(e,t){var r,n,i,o;let a=0;const l=[];for(const d of e){if(null===(r=d.embed)||void 0===r?void 0:r.image){const e=u.Media.addImage(t,d.embed.image);l.push(new u.Paragraph(e))}else if(null===(n=d.embed)||void 0===n?void 0:n.video){const e=(s=d.embed.video,new u.TextRun({text:s}));l.push(new u.Paragraph({children:[e]}))}else d.textRuns&&(a>0&&"ordered"===(null===(i=d.attributes)||void 0===i?void 0:i.list)&&("ordered"===(null===(o=e[a-1].attributes)||void 0===o?void 0:o.list)?c=c:c++),l.push(h(d)));a++}var s;return l}function h(e){var t,r,n,i,o,a,l,d,p,f;const v=[];for(const t of e.textRuns)t.formula?v.push((g=t.formula,new u.TextRun({text:g}))):t.text&&v.push(b(t));var g;return new u.Paragraph({children:v,heading:1===(null===(t=e.attributes)||void 0===t?void 0:t.header)?s.HeadingLevel.HEADING_1:2===(null===(r=e.attributes)||void 0===r?void 0:r.header)?s.HeadingLevel.HEADING_2:void 0,bullet:"bullet"===(null===(n=e.attributes)||void 0===n?void 0:n.list)?{level:e.attributes.indent?e.attributes.indent:0}:void 0,numbering:"ordered"===(null===(i=e.attributes)||void 0===i?void 0:i.list)?{reference:`numbered_${c}`,level:e.attributes.indent?e.attributes.indent:0}:void 0,alignment:"left"===(null===(o=e.attributes)||void 0===o?void 0:o.align)?u.AlignmentType.LEFT:"center"===(null===(a=e.attributes)||void 0===a?void 0:a.align)?u.AlignmentType.CENTER:"right"===(null===(l=e.attributes)||void 0===l?void 0:l.align)?u.AlignmentType.RIGHT:"justify"===(null===(d=e.attributes)||void 0===d?void 0:d.align)?u.AlignmentType.JUSTIFIED:void 0,style:(null===(p=e.attributes)||void 0===p?void 0:p["code-block"])?"code_block":(null===(f=e.attributes)||void 0===f?void 0:f.blockquote)?"block_quote":void 0})}function b(e,t){var r,n,i,o,a,l,s,d,c,f,v,g,h;let b;return(null===(r=e.attributes)||void 0===r?void 0:r.link)?(b=new u.HyperlinkRef(`link${p}`),p++):b=new u.TextRun({text:e.text,bold:!!(null===(n=e.attributes)||void 0===n?void 0:n.bold),italics:!!(null===(i=e.attributes)||void 0===i?void 0:i.italic),subScript:"sub"===(null===(o=e.attributes)||void 0===o?void 0:o.script),superScript:"super"===(null===(a=e.attributes)||void 0===a?void 0:a.script),strike:!!(null===(l=e.attributes)||void 0===l?void 0:l.strike),underline:(null===(s=e.attributes)||void 0===s?void 0:s.underline)?{type:u.UnderlineType.SINGLE,color:"auto"}:void 0,color:(null===(d=e.attributes)||void 0===d?void 0:d.color)?null===(c=e.attributes)||void 0===c?void 0:c.color.slice(1):void 0,size:"huge"===(null===(f=e.attributes)||void 0===f?void 0:f.size)?36:"large"===(null===(v=e.attributes)||void 0===v?void 0:v.size)?32:"small"===(null===(g=e.attributes)||void 0===g?void 0:g.size)?20:void 0,highlight:(null===(h=e.attributes)||void 0===h?void 0:h.background)?"yellow":void 0}),b}t.generateWord=function(e,t){return a(this,void 0,void 0,(function*(){let r;p=0,c=-1;const n=[],i=[];if(e.ops){const t=l.parseQuillDelta(e);i.push(t)}else if(Array.isArray(e))for(const t of e)i.push(t);else{if(!e.paragraphs)throw new Error("Please provide a raw Quill Delta, a parsed Quill delta, or an Array of parsed Quill deltas. See QuillTodocx readme.");i.push(e)}r=function(e,t){let r,n;return f=d.defaultStyles,t&&function(e){e.paragraphStyles&&function(e){if(e.normal){const t=f.findIndex((e=>"normal"===e.id));v(e.normal,0,t)}if(e.header_1){const t=f.findIndex((e=>"header_1"===e.id));v(e.header_1,0,t)}if(e.header_2){const t=f.findIndex((e=>"header_2"===e.id));v(e.header_2,0,t)}if(e.list_paragraph){const t=f.findIndex((e=>"list_paragraph"===e.id));v(e.list_paragraph,0,t)}if(e.code_block){const t=f.findIndex((e=>"code_block"===e.id));v(e.code_block,0,t)}if(e.block_quote){const t=f.findIndex((e=>"block_quote"===e.id));v(e.block_quote,0,t)}}(e.paragraphStyles)}(t),e.setup.hyperlinks.length>0&&(r=function(e){let t={},r=0;for(const n of e){const e={link:n.link,text:n.text,type:u.HyperlinkType.EXTERNAL};t=Object.assign(Object.assign({},t),{[`link${r}`]:e}),r++}return t}(e.setup.hyperlinks)),e.setup.numberedLists>0&&(n=function(e){let t=[],r=0;for(;r<e;){const e={reference:`numbered_${r}`,levels:d.customLevels};t.push(e),r++}return{config:t}}(e.setup.numberedLists)),new s.Document({styles:{paragraphStyles:f},numbering:n,hyperlinks:r})}(i[0],t);for(const e of i)n.push(g(e.paragraphs,r));for(const e of n)r.addSection({children:e});return function(e,t){return a(this,void 0,void 0,(function*(){if(!t||!t.exportAs||"doc"===t.exportAs)return e;if("blob"===t.exportAs)return u.Packer.toBlob(e);if("buffer"===t.exportAs)return console.log("returning buffer"),u.Packer.toBuffer(e);if("base64"===t.exportAs)return u.Packer.toBase64String(e);throw new Error("Please set exportAs configuration to blob, buffer, doc, or base64.")}))}(r,t)}))}},607:function(e,t,r){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(35),t),i(r(679),t)},679:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0})},687:t=>{"use strict";t.exports=e}},r={},function e(n){if(r[n])return r[n].exports;var i=r[n]={exports:{}};return t[n].call(i.exports,i,i.exports,e),i.exports}(607);var t,r}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,