!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("docx")):"function"==typeof define&&define.amd?define(["docx"],t):"object"==typeof exports?exports.QuillToWord=t(require("docx")):e.QuillToWord=t(e.docx)}(self,(function(e){return t={190:e=>{self,e.exports=(()=>{"use strict";var e={607:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseQuillDelta=void 0;let n=!1;function r(e,t){e.insert.video||e.insert.image?function(e,t){t.paragraphs.push({embed:e.insert}),n=!1,i(t)}(e,t):e.insert.formula?function(e,t){var n;0===t.paragraphs.length&&i(t),null===(n=t.paragraphs[t.paragraphs.length-1].textRuns)||void 0===n||n.push({formula:e.insert.formula,attributes:e.attributes})}(e,t):"\n"===e.insert?function(e,t){e.attributes&&(t.paragraphs[t.paragraphs.length-1].attributes=e.attributes,"ordered"===e.attributes.list?n||(t.setup.numberedLists++,n=!0):n=!1),i(t)}(e,t):function(e,t){if(0===t.paragraphs.length&&i(t),e.insert.match(/\n/)){const r=e.insert.split(/(\n)/);for(const e of r)"\n"===e?(i(t),n=!1):o(e,t)}else o(e.insert,t,e.attributes)}(e,t)}function i(e){e.paragraphs.push({textRuns:[]})}function o(e,t,n){var r,i;n?(null===(r=t.paragraphs[t.paragraphs.length-1].textRuns)||void 0===r||r.push({text:e,attributes:n}),n.link&&t.setup.hyperlinks.push({text:e,link:n.link})):null===(i=t.paragraphs[t.paragraphs.length-1].textRuns)||void 0===i||i.push({text:e})}t.parseQuillDelta=function(e){n=!1;const t={paragraphs:[],setup:{numberedLists:0,hyperlinks:[]}};for(const n of e.ops)r(n,t);return t}}},t={};return function n(r){if(t[r])return t[r].exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}(607)})()},829:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.defaultNumbering=t.customLevels=t.defaultStyles=void 0;const r=n(687);t.defaultStyles=[{id:"normal",name:"Normal",next:"normal",basedOn:"normal",quickFormat:!0,run:{size:24},paragraph:{spacing:{line:480,before:0,after:0}}},{id:"header_1",name:"Heading 1",next:"normal",quickFormat:!0,run:{font:"Calibri",size:30,bold:!0},paragraph:{spacing:{before:300,after:200}}},{id:"header_2",name:"Heading 2",basedOn:"normal",next:"normal",quickFormat:!0,run:{font:"Calibri",size:26,bold:!0},paragraph:{spacing:{before:200,after:100}}},{id:"list_paragraph",name:"List Paragraph",basedOn:"normal",quickFormat:!0,run:{size:24}},{id:"code_block",name:"Code Block",basedOn:"normal",quickFormat:!0,run:{size:24,font:"Courier New"},paragraph:{indent:{left:720,right:720}}},{id:"block_quote",name:"Block Quote",basedOn:"normal",quickFormat:!0,run:{italics:!0},paragraph:{indent:{left:540},border:{left:{size:12,space:28,color:"333333",value:"single"}}}}],t.customLevels=[{level:0,format:"decimal",text:"%1.",alignment:r.AlignmentType.LEFT,style:{paragraph:{indent:{left:720,hanging:360}}}},{level:1,format:"lowerLetter",text:"%2.",alignment:r.AlignmentType.LEFT,style:{paragraph:{indent:{left:1440,hanging:360}}}},{level:2,format:"lowerRoman",text:"%3.",alignment:r.AlignmentType.LEFT,style:{paragraph:{indent:{left:2160,hanging:360}}}},{level:3,format:"decimal",text:"%4.",alignment:r.AlignmentType.LEFT,style:{paragraph:{indent:{left:2880,hanging:360}}}},{level:4,format:"lowerLetter",text:"%5.",alignment:r.AlignmentType.LEFT,style:{paragraph:{indent:{left:3600,hanging:360}}}},{level:3,format:"lowerRoman",text:"%5.",alignment:r.AlignmentType.LEFT,style:{paragraph:{indent:{left:4320,hanging:360}}}}],t.defaultNumbering={config:[{reference:"default-numbering",levels:t.customLevels}]}},607:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},a=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,o){function a(e){try{s(r.next(e))}catch(e){o(e)}}function l(e){try{s(r.throw(e))}catch(e){o(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,l)}s((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.generateWord=void 0;const l=n(190),s=o(n(687)),u=n(687),d=n(829);let p=0,c=-1;function f(e,t){var n,r,i,o;let a=0;const l=[];for(const d of e){if(null===(n=d.embed)||void 0===n?void 0:n.image){const e=u.Media.addImage(t,d.embed.image);l.push(new u.Paragraph(e))}else if(null===(r=d.embed)||void 0===r?void 0:r.video){const e=(s=d.embed.video,new u.TextRun({text:s}));l.push(new u.Paragraph({children:[e]}))}else d.textRuns&&(a>0&&"ordered"===(null===(i=d.attributes)||void 0===i?void 0:i.list)&&("ordered"===(null===(o=e[a-1].attributes)||void 0===o?void 0:o.list)?c=c:c++),l.push(v(d)));a++}var s;return l}function v(e){var t,n,r,i,o,a,l,d,p,f;const v=[];for(const t of e.textRuns)t.formula?v.push((h=t.formula,new u.TextRun({text:h}))):t.text&&v.push(g(t));var h;return new u.Paragraph({children:v,heading:1===(null===(t=e.attributes)||void 0===t?void 0:t.header)?s.HeadingLevel.HEADING_1:2===(null===(n=e.attributes)||void 0===n?void 0:n.header)?s.HeadingLevel.HEADING_2:void 0,bullet:"bullet"===(null===(r=e.attributes)||void 0===r?void 0:r.list)?{level:e.attributes.indent?e.attributes.indent:0}:void 0,numbering:"ordered"===(null===(i=e.attributes)||void 0===i?void 0:i.list)?{reference:`numbered_${c}`,level:e.attributes.indent?e.attributes.indent:0}:void 0,alignment:"left"===(null===(o=e.attributes)||void 0===o?void 0:o.align)?u.AlignmentType.LEFT:"center"===(null===(a=e.attributes)||void 0===a?void 0:a.align)?u.AlignmentType.CENTER:"right"===(null===(l=e.attributes)||void 0===l?void 0:l.align)?u.AlignmentType.RIGHT:"justify"===(null===(d=e.attributes)||void 0===d?void 0:d.align)?u.AlignmentType.JUSTIFIED:void 0,style:(null===(p=e.attributes)||void 0===p?void 0:p["code-block"])?"code_block":(null===(f=e.attributes)||void 0===f?void 0:f.blockquote)?"block_quote":void 0})}function g(e,t){var n,r,i,o,a,l,s,d,c,f,v,g,h;let b;return(null===(n=e.attributes)||void 0===n?void 0:n.link)?(b=new u.HyperlinkRef(`link${p}`),p++):b=new u.TextRun({text:e.text,bold:!!(null===(r=e.attributes)||void 0===r?void 0:r.bold),italics:!!(null===(i=e.attributes)||void 0===i?void 0:i.italic),subScript:"sub"===(null===(o=e.attributes)||void 0===o?void 0:o.script),superScript:"super"===(null===(a=e.attributes)||void 0===a?void 0:a.script),strike:!!(null===(l=e.attributes)||void 0===l?void 0:l.strike),underline:(null===(s=e.attributes)||void 0===s?void 0:s.underline)?{type:u.UnderlineType.SINGLE,color:"auto"}:void 0,color:(null===(d=e.attributes)||void 0===d?void 0:d.color)?null===(c=e.attributes)||void 0===c?void 0:c.color.slice(1):void 0,size:"huge"===(null===(f=e.attributes)||void 0===f?void 0:f.size)?36:"large"===(null===(v=e.attributes)||void 0===v?void 0:v.size)?32:"small"===(null===(g=e.attributes)||void 0===g?void 0:g.size)?20:void 0,highlight:(null===(h=e.attributes)||void 0===h?void 0:h.background)?"yellow":void 0}),b}t.generateWord=function(e){return a(this,void 0,void 0,(function*(){let t;console.log("testing symlink"),p=0,c=-1;const n=[],r=[];if(e.ops){const t=l.parseQuillDelta(e);r.push(t)}else if(Array.isArray(e))for(const t of e)r.push(t);else{if(!e.paragraphs)throw new Error("Please provide a raw Quill Delta, a parsed Quill delta, or an Array of parsed Quill deltas. See QuillTodocx readme.");r.push(e)}t=function(e){let t,n;return e.setup.hyperlinks.length>0&&(t=function(e){let t={},n=0;for(const r of e){const e={link:r.link,text:r.text,type:u.HyperlinkType.EXTERNAL};t=Object.assign(Object.assign({},t),{[`link${n}`]:e}),n++}return t}(e.setup.hyperlinks)),e.setup.numberedLists>0&&(n=function(e){let t=[],n=0;for(;n<e;){const e={reference:`numbered_${n}`,levels:d.customLevels};t.push(e),n++}return{config:t}}(e.setup.numberedLists)),new s.Document({styles:{paragraphStyles:d.defaultStyles},numbering:n,hyperlinks:t})}(r[0]);for(const e of r)n.push(f(e.paragraphs,t));for(const e of n)t.addSection({children:e});return t}))}},687:t=>{"use strict";t.exports=e}},n={},function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{}};return t[r].call(i.exports,i,i.exports,e),i.exports}(607);var t,n}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9RdWlsbFRvV29yZC93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vUXVpbGxUb1dvcmQvLi9ub2RlX21vZHVsZXMvcXVpbGxqcy1wYXJzZXIvZGlzdC9tYWluLmpzIiwid2VicGFjazovL1F1aWxsVG9Xb3JkLy4vc3JjL2RlZmF1bHQtc3R5bGVzLnRzIiwid2VicGFjazovL1F1aWxsVG9Xb3JkLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovL1F1aWxsVG9Xb3JkL2V4dGVybmFsIFwiZG9jeFwiIiwid2VicGFjazovL1F1aWxsVG9Xb3JkL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL1F1aWxsVG9Xb3JkL3dlYnBhY2svc3RhcnR1cCJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJyZXF1aXJlIiwiZGVmaW5lIiwiYW1kIiwic2VsZiIsIl9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfXzY4N19fIiwidCIsIjYwNyIsImUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwicGFyc2VRdWlsbERlbHRhIiwiciIsInMiLCJpbnNlcnQiLCJ2aWRlbyIsImltYWdlIiwicGFyYWdyYXBocyIsInB1c2giLCJlbWJlZCIsIm4iLCJmb3JtdWxhIiwibGVuZ3RoIiwidGV4dFJ1bnMiLCJhdHRyaWJ1dGVzIiwibGlzdCIsInNldHVwIiwibnVtYmVyZWRMaXN0cyIsIm1hdGNoIiwic3BsaXQiLCJhIiwidGV4dCIsImxpbmsiLCJoeXBlcmxpbmtzIiwib3BzIiwiZGVmYXVsdFN0eWxlcyIsImlkIiwibmFtZSIsIm5leHQiLCJiYXNlZE9uIiwicXVpY2tGb3JtYXQiLCJydW4iLCJzaXplIiwicGFyYWdyYXBoIiwic3BhY2luZyIsImxpbmUiLCJiZWZvcmUiLCJhZnRlciIsImZvbnQiLCJib2xkIiwiaW5kZW50IiwibGVmdCIsInJpZ2h0IiwiaXRhbGljcyIsImJvcmRlciIsInNwYWNlIiwiY29sb3IiLCJjdXN0b21MZXZlbHMiLCJsZXZlbCIsImZvcm1hdCIsImFsaWdubWVudCIsIkFsaWdubWVudFR5cGUiLCJMRUZUIiwic3R5bGUiLCJoYW5naW5nIiwiZGVmYXVsdE51bWJlcmluZyIsImNvbmZpZyIsInJlZmVyZW5jZSIsImxldmVscyIsImxpbmtUcmFja2VyIiwibnVtYmVyZWRUcmFja2VyIiwiYnVpbGRTZWN0aW9uIiwicXVpbGxQYXJhZ3JhcGhzIiwiZG9jIiwicXVpbGxQYXJhZ3JhcGhUcmFja2VyIiwiTWVkaWEiLCJhZGRJbWFnZSIsIlBhcmFncmFwaCIsIlRleHRSdW4iLCJjaGlsZHJlbiIsImJ1aWxkUGFyYWdyYXBoIiwiYnVpbGRUZXh0UnVuIiwiaGVhZGluZyIsImhlYWRlciIsImRvY3giLCJIZWFkaW5nTGV2ZWwiLCJIRUFESU5HXzEiLCJIRUFESU5HXzIiLCJ1bmRlZmluZWQiLCJidWxsZXQiLCJudW1iZXJpbmciLCJhbGlnbiIsIkNFTlRFUiIsIlJJR0hUIiwiSlVTVElGSUVEIiwiYmxvY2txdW90ZSIsInRleHRSdW4iLCJIeXBlcmxpbmtSZWYiLCJpdGFsaWMiLCJzdWJTY3JpcHQiLCJzY3JpcHQiLCJzdXBlclNjcmlwdCIsInN0cmlrZSIsInVuZGVybGluZSIsInR5cGUiLCJVbmRlcmxpbmVUeXBlIiwiU0lOR0xFIiwic2xpY2UiLCJoaWdobGlnaHQiLCJiYWNrZ3JvdW5kIiwiZGVsdGEiLCJjb25zb2xlIiwibG9nIiwic2VjdGlvbnMiLCJwYXJzZWREZWx0YXMiLCJwYXJzZWREZWx0YSIsIkFycmF5IiwiaXNBcnJheSIsImVhY2hEZWx0YSIsIkVycm9yIiwicXVpbGxMaW5rcyIsImRvY0xpbmsiLCJIeXBlcmxpbmtUeXBlIiwiRVhURVJOQUwiLCJidWlsZEh5cGVybGlua3MiLCJudW1iZXJPZkxpc3RzIiwibnVtYmVyVHJhY2tlciIsIm5ld0xpc3QiLCJidWlsZE51bWJlcmluZyIsIkRvY3VtZW50Iiwic3R5bGVzIiwicGFyYWdyYXBoU3R5bGVzIiwic2V0dXBEb2MiLCJzZWN0aW9uIiwiYWRkU2VjdGlvbiIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIl0sIm1hcHBpbmdzIjoiQ0FBQSxTQUEyQ0EsRUFBTUMsR0FDMUIsaUJBQVpDLFNBQTBDLGlCQUFYQyxPQUN4Q0EsT0FBT0QsUUFBVUQsRUFBUUcsUUFBUSxTQUNSLG1CQUFYQyxRQUF5QkEsT0FBT0MsSUFDOUNELE9BQU8sQ0FBQyxRQUFTSixHQUNTLGlCQUFaQyxRQUNkQSxRQUFxQixZQUFJRCxFQUFRRyxRQUFRLFNBRXpDSixFQUFrQixZQUFJQyxFQUFRRCxFQUFXLE1BUjNDLENBU0dPLE1BQU0sU0FBU0MsR0FDbEIsTyxXQ1Z1TkQsS0FBdEpKLEVBQU9ELFFBQXNLLE1BQU0sYUFBYSxJQUFJTyxFQUFFLENBQUNDLElBQUksQ0FBQ0QsRUFBRUUsS0FBS0MsT0FBT0MsZUFBZUYsRUFBRSxhQUFhLENBQUNHLE9BQU0sSUFBS0gsRUFBRUkscUJBQWdCLEVBQU8sSUFBSUMsR0FBRSxFQUFHLFNBQVNDLEVBQUVSLEVBQUVFLEdBQUdGLEVBQUVTLE9BQU9DLE9BQU9WLEVBQUVTLE9BQU9FLE1BQU0sU0FBU1gsRUFBRUUsR0FBR0EsRUFBRVUsV0FBV0MsS0FBSyxDQUFDQyxNQUFNZCxFQUFFUyxTQUFTRixHQUFFLEVBQUdRLEVBQUViLEdBQXpELENBQTZERixFQUFFRSxHQUFHRixFQUFFUyxPQUFPTyxRQUFRLFNBQVNoQixFQUFFRSxHQUFHLElBQUlLLEVBQUUsSUFBSUwsRUFBRVUsV0FBV0ssUUFBUUYsRUFBRWIsR0FBRyxRQUFRSyxFQUFFTCxFQUFFVSxXQUFXVixFQUFFVSxXQUFXSyxPQUFPLEdBQUdDLGdCQUFXLElBQVNYLEdBQUdBLEVBQUVNLEtBQUssQ0FBQ0csUUFBUWhCLEVBQUVTLE9BQU9PLFFBQVFHLFdBQVduQixFQUFFbUIsYUFBckssQ0FBbUxuQixFQUFFRSxHQUFH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RyxlQUVuQnVELFVBQVdBLEVBQ1h6RCxXQUFZQSxJQXNFUm1HLENBQVNsQixFQUFhLElBRTVCLElBQUssTUFBTUosS0FBU0ksRUFFbEJELEVBQVMvRixLQUFLcUQsRUFBYXVDLEVBQU03RixXQUFZd0QsSUFHL0MsSUFBSyxNQUFNNEQsS0FBV3BCLEVBQ3BCeEMsRUFBSTZELFdBQVcsQ0FDWHZELFNBQVVzRCxJQUtoQixPQUFPNUQsTyxxQkM3R1QxRSxFQUFPRCxRQUFVTSxJQ0NibUksRUFBMkIsR0FHL0IsU0FBU0MsRUFBb0JDLEdBRTVCLEdBQUdGLEVBQXlCRSxHQUMzQixPQUFPRixFQUF5QkUsR0FBVTNJLFFBRzNDLElBQUlDLEVBQVN3SSxFQUF5QkUsR0FBWSxDQUdqRDNJLFFBQVMsSUFPVixPQUhBNEksRUFBb0JELEdBQVVFLEtBQUs1SSxFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTMEksR0FHcEV6SSxFQUFPRCxRQ2pCUjBJLENBQW9CLEssTURGdkJEIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoXCJkb2N4XCIpKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtcImRvY3hcIl0sIGZhY3RvcnkpO1xuXHRlbHNlIGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jylcblx0XHRleHBvcnRzW1wiUXVpbGxUb1dvcmRcIl0gPSBmYWN0b3J5KHJlcXVpcmUoXCJkb2N4XCIpKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJRdWlsbFRvV29yZFwiXSA9IGZhY3Rvcnkocm9vdFtcImRvY3hcIl0pO1xufSkoc2VsZiwgZnVuY3Rpb24oX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fNjg3X18pIHtcbnJldHVybiAiLCIhZnVuY3Rpb24odCxlKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1lKCk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXSxlKTpcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cz9leHBvcnRzW1wicXVpbGxqcy1wYXJzZXJcIl09ZSgpOnRbXCJxdWlsbGpzLXBhcnNlclwiXT1lKCl9KHNlbGYsKGZ1bmN0aW9uKCl7cmV0dXJuKCgpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIHQ9ezYwNzoodCxlKT0+e09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pLGUucGFyc2VRdWlsbERlbHRhPXZvaWQgMDtsZXQgcj0hMTtmdW5jdGlvbiBzKHQsZSl7dC5pbnNlcnQudmlkZW98fHQuaW5zZXJ0LmltYWdlP2Z1bmN0aW9uKHQsZSl7ZS5wYXJhZ3JhcGhzLnB1c2goe2VtYmVkOnQuaW5zZXJ0fSkscj0hMSxuKGUpfSh0LGUpOnQuaW5zZXJ0LmZvcm11bGE/ZnVuY3Rpb24odCxlKXt2YXIgcjswPT09ZS5wYXJhZ3JhcGhzLmxlbmd0aCYmbihlKSxudWxsPT09KHI9ZS5wYXJhZ3JhcGhzW2UucGFyYWdyYXBocy5sZW5ndGgtMV0udGV4dFJ1bnMpfHx2b2lkIDA9PT1yfHxyLnB1c2goe2Zvcm11bGE6dC5pbnNlcnQuZm9ybXVsYSxhdHRyaWJ1dGVzOnQuYXR0cmlidXRlc30pfSh0LGUpOlwiXFxuXCI9PT10Lmluc2VydD9mdW5jdGlvbih0LGUpe3QuYXR0cmlidXRlcyYmKGUucGFyYWdyYXBoc1tlLnBhcmFncmFwaHMubGVuZ3RoLTFdLmF0dHJpYnV0ZXM9dC5hdHRyaWJ1dGVzLFwib3JkZXJlZFwiPT09dC5hdHRyaWJ1dGVzLmxpc3Q/cnx8KGUuc2V0dXAubnVtYmVyZWRMaXN0cysrLHI9ITApOnI9ITEpLG4oZSl9KHQsZSk6ZnVuY3Rpb24odCxlKXtpZigwPT09ZS5wYXJhZ3JhcGhzLmxlbmd0aCYmbihlKSx0Lmluc2VydC5tYXRjaCgvXFxuLykpe2NvbnN0IHM9dC5pbnNlcnQuc3BsaXQoLyhcXG4pLyk7Zm9yKGNvbnN0IHQgb2YgcylcIlxcblwiPT09dD8obihlKSxyPSExKTphKHQsZSl9ZWxzZSBhKHQuaW5zZXJ0LGUsdC5hdHRyaWJ1dGVzKX0odCxlKX1mdW5jdGlvbiBuKHQpe3QucGFyYWdyYXBocy5wdXNoKHt0ZXh0UnVuczpbXX0pfWZ1bmN0aW9uIGEodCxlLHIpe3ZhciBzLG47cj8obnVsbD09PShzPWUucGFyYWdyYXBoc1tlLnBhcmFncmFwaHMubGVuZ3RoLTFdLnRleHRSdW5zKXx8dm9pZCAwPT09c3x8cy5wdXNoKHt0ZXh0OnQsYXR0cmlidXRlczpyfSksci5saW5rJiZlLnNldHVwLmh5cGVybGlua3MucHVzaCh7dGV4dDp0LGxpbms6ci5saW5rfSkpOm51bGw9PT0obj1lLnBhcmFncmFwaHNbZS5wYXJhZ3JhcGhzLmxlbmd0aC0xXS50ZXh0UnVucyl8fHZvaWQgMD09PW58fG4ucHVzaCh7dGV4dDp0fSl9ZS5wYXJzZVF1aWxsRGVsdGE9ZnVuY3Rpb24odCl7cj0hMTtjb25zdCBlPXtwYXJhZ3JhcGhzOltdLHNldHVwOntudW1iZXJlZExpc3RzOjAsaHlwZXJsaW5rczpbXX19O2Zvcihjb25zdCByIG9mIHQub3BzKXMocixlKTtyZXR1cm4gZX19fSxlPXt9O3JldHVybiBmdW5jdGlvbiByKHMpe2lmKGVbc10pcmV0dXJuIGVbc10uZXhwb3J0czt2YXIgbj1lW3NdPXtleHBvcnRzOnt9fTtyZXR1cm4gdFtzXShuLG4uZXhwb3J0cyxyKSxuLmV4cG9ydHN9KDYwNyl9KSgpfSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5eGRXbHNiR3B6TFhCaGNuTmxjaTkzWldKd1lXTnJMM1Z1YVhabGNuTmhiRTF2WkhWc1pVUmxabWx1YVhScGIyNGlMQ0ozWldKd1lXTnJPaTh2Y1hWcGJHeHFjeTF3WVhKelpYSXZMaTl6Y21NdmFXNWtaWGd1ZEhNaUxDSjNaV0p3WVdOck9pOHZjWFZwYkd4cWN5MXdZWEp6WlhJdmQyVmljR0ZqYXk5aWIyOTBjM1J5WVhBaUxDSjNaV0p3WVdOck9pOHZjWFZwYkd4cWN5MXdZWEp6WlhJdmQyVmljR0ZqYXk5emRHRnlkSFZ3SWwwc0ltNWhiV1Z6SWpwYkluSnZiM1FpTENKbVlXTjBiM0o1SWl3aVpYaHdiM0owY3lJc0ltMXZaSFZzWlNJc0ltUmxabWx1WlNJc0ltRnRaQ0lzSW5ObGJHWWlMQ0poWTNScGRtVk9kVzFpWlhKbFpFeHBjM1FpTENKd1lYSnpaVTl3SWl3aWIzQWlMQ0p3WVhKelpXUWlMQ0pwYm5ObGNuUWlMQ0oyYVdSbGJ5SXNJbWx0WVdkbElpd2ljR0Z5WVdkeVlYQm9jeUlzSW5CMWMyZ2lMQ0psYldKbFpDSXNJbk4wWVhKMFRtVjNVR0Z5WVdkeVlYQm9JaXdpYVc1elpYSjBSVzFpWldSUVlYSmhaM0poY0dnaUxDSm1iM0p0ZFd4aElpd2liR1Z1WjNSb0lpd2lkR1Y0ZEZKMWJuTWlMQ0poZEhSeWFXSjFkR1Z6SWl3aWFXNXpaWEowUm05eWJYVnNZU0lzSW14cGMzUWlMQ0p6WlhSMWNDSXNJbTUxYldKbGNtVmtUR2x6ZEhNaUxDSnBibk5sY25ST1pYZHNhVzVsSWl3aWJXRjBZMmdpTENKemRISnBibWR6SWl3aWMzQnNhWFFpTENKMFpYaDBJaXdpYVc1elpYSjBVMmx0Y0d4bFUzUnlhVzVuSWl3aWFXNXpaWEowVkdWNGRDSXNJbXhwYm1zaUxDSm9lWEJsY214cGJtdHpJaXdpY1hWcGJHd2lMQ0p2Y0hNaUxDSmZYM2RsWW5CaFkydGZiVzlrZFd4bFgyTmhZMmhsWDE4aUxDSmZYM2RsWW5CaFkydGZjbVZ4ZFdseVpWOWZJaXdpYlc5a2RXeGxTV1FpTENKZlgzZGxZbkJoWTJ0ZmJXOWtkV3hsYzE5ZklsMHNJbTFoY0hCcGJtZHpJam9pUTBGQlFTeFRRVUV5UTBFc1JVRkJUVU1zUjBGRE1VSXNhVUpCUVZwRExGTkJRVEJETEdsQ1FVRllReXhQUVVONFEwRXNUMEZCVDBRc1VVRkJWVVFzU1VGRFVTeHRRa0ZCV0Vjc1VVRkJlVUpCTEU5QlFVOURMRWxCUXpsRFJDeFBRVUZQTEVkQlFVbElMRWRCUTJVc2FVSkJRVnBETEZGQlEyUkJMRkZCUVZFc2EwSkJRVzlDUkN4SlFVVTFRa1FzUlVGQlN5eHJRa0ZCYjBKRExFbEJVak5DTEVOQlUwZExMRTFCUVUwc1YwRkRWQ3hOTEdkSVF6WkVRU3hKUVVGSlF5eEhRVUZ4UWl4RlFXdENla0lzVTBGQlUwTXNSVUZCVVVNc1JVRkJZVU1zUjBGRmNrSkVMRVZCUVVkRkxFOUJRWFZDUXl4UFFVRlZTQ3hGUVVGSFJTeFBRVUYxUWtVc1RVRnpRblpGTEZOQlFUaENTaXhGUVVGaFF5eEhRVU4yUTBFc1JVRkJUMGtzVjBGQlYwTXNTMEZCU3l4RFFVTnVRa01zVFVGQlQxQXNSVUZCUjBVc1UwRkZaRW9zUjBGQmNVSXNSVUZEY2tKVkxFVkJRV3RDVUN4SFFURkNaRkVzUTBGQmNVSlVMRVZCUVVsRExFZEJSV3BDUkN4RlFVRkhSU3hQUVVGMVFsRXNVVUUwUWpGRExGTkJRWFZDVml4RlFVRmhReXhITEUxQlEwTXNTVUZCTjBKQkxFVkJRVTlKTEZkQlFWZE5MRkZCUTJ4Q1NDeEZRVUZyUWxBc1IwRkZaME1zVVVGQmRFUXNSVUZCUVVFc1JVRkJUMGtzVjBGQlYwb3NSVUZCVDBrc1YwRkJWMDBzVDBGQlR5eEhRVUZIUXl4blFrRkJVU3hUUVVGRlRpeExRVUZMTEVOQlEzcEVTU3hSUVVGVlZpeEZRVUZIUlN4UFFVRjFRbEVzVVVGRGNFTkhMRmRCUVZsaUxFVkJRVWRoTEdGQmFrTm1ReXhEUVVGalpDeEZRVUZKUXl4SFFVVkhMRTlCUVdSRUxFVkJRVWRGTEU5QmIwTnNRaXhUUVVGMVFrWXNSVUZCWVVNc1IwRkZOVUpFTEVWQlFVZGhMR0ZCUTBoYUxFVkJRVTlKTEZkQlFWZEtMRVZCUVU5SkxGZEJRVmROTEU5QlFVOHNSMEZCUjBVc1YwRkJZV0lzUlVGQlIyRXNWMEZEYmtNc1dVRkJka0ppTEVWQlFVZGhMRmRCUVZkRkxFdEJSVlpxUWl4SlFVMUJSeXhGUVVGUFpTeE5RVUZOUXl4blFrRkRZbTVDTEVkQlFYRkNMRWRCUjNwQ1FTeEhRVUZ4UWl4SFFVYzNRbFVzUlVGQmEwSlFMRWRCZEVSa2FVSXNRMEZCWTJ4Q0xFVkJRVWxETEVkQk1FUXhRaXhUUVVGdlFrUXNSVUZCWVVNc1IwRkxOMElzUjBGS2FVTXNTVUZCTjBKQkxFVkJRVTlKTEZkQlFWZE5MRkZCUTJ4Q1NDeEZRVUZyUWxBc1IwRkhha0pFTEVWQlFVZEZMRTlCUVd0Q2FVSXNUVUZCVFN4TlFVRlBMRU5CUTI1RExFMUJRVTFETEVWQlFYZENjRUlzUlVGQlIwVXNUMEZwUTNaQ2JVSXNUVUZCVFN4UlFXaERhRUlzU1VGQlN5eE5RVUZOUXl4TFFVRlJSaXhGUVVOR0xFOUJRVlJGTEVkQlEwRmtMRVZCUVd0Q1VDeEhRVU5zUWtnc1IwRkJjVUlzUjBGRmNrSjVRaXhGUVVGdFFrUXNSVUZCVFhKQ0xGRkJTV3BEYzBJc1JVRkJiVUoyUWl4RlFVRkhSU3hQUVVGclFrUXNSVUZCVVVRc1JVRkJSMkVzV1VGMlJXNUVWeXhEUVVGWGVFSXNSVUZCU1VNc1IwRkxka0lzVTBGQlUwOHNSVUZCYTBKUUxFZEJRM1pDUVN4RlFVRlBTU3hYUVVGWFF5eExRVUZMTEVOQlEyNUNUU3hUUVVGVkxFdEJjVVZzUWl4VFFVRlRWeXhGUVVGdFFrUXNSVUZCWTNKQ0xFVkJRVEJDV1N4SExGRkJRelZFUVN4SFFVTnpSQ3hSUVVGMFJDeEZRVUZCV2l4RlFVRlBTU3hYUVVGWFNpeEZRVUZQU1N4WFFVRlhUU3hQUVVGUExFZEJRVWRETEdkQ1FVRlJMRk5CUVVWT0xFdEJRVXNzUTBGRGVrUm5RaXhMUVVGTlFTeEZRVU5PVkN4WFFVRlpRU3hKUVVWYVFTeEZRVUZYV1N4TlFVTlllRUlzUlVGQlQyVXNUVUZCVFZVc1YwRkJWM0JDTEV0QlFVc3NRMEZCUldkQ0xFdEJRVTFCTEVWQlFVMUhMRXRCUVUxYUxFVkJRVmRaTEZGQlIxWXNVVUZCZEVRc1JVRkJRWGhDTEVWQlFVOUpMRmRCUVZkS0xFVkJRVTlKTEZkQlFWZE5MRTlCUVU4c1IwRkJSME1zWjBKQlFWRXNVMEZCUlU0c1MwRkJTeXhEUVVONlJHZENMRXRCUVUxQkxFbEJia2hzUWl3eVFrRkJaME5MTEVkQlF6VkNOMElzUjBGQmNVSXNSVUZEY2tJc1RVRkJUVWNzUlVGQk1rSXNRMEZETjBKSkxGZEJRVmtzUjBGRFdsY3NUVUZCVHl4RFFVTklReXhqUVVGbExFVkJRMlpUTEZkQlFWa3NTMEZIY0VJc1NVRkJTeXhOUVVGTk1VSXNTMEZCVFRKQ0xFVkJRVTFETEVsQlEyNUNOMElzUlVGQlVVTXNSVUZCU1VNc1IwRkZhRUlzVDBGQlQwRXNTME53UmxBMFFpeEZRVUV5UWl4SFEwVXZRaXhQUkVOQkxGTkJRVk5ETEVWQlFXOUNReXhIUVVVMVFpeEhRVUZIUml4RlFVRjVRa1VzUjBGRE0wSXNUMEZCVDBZc1JVRkJlVUpGTEVkQlFWVjBReXhSUVVjelF5eEpRVUZKUXl4RlFVRlRiVU1zUlVGQmVVSkZMRWRCUVZrc1EwRkhha1IwUXl4UlFVRlRMRWxCVDFZc1QwRklRWFZETEVWQlFXOUNSQ3hIUVVGVmNrTXNSVUZCVVVFc1JVRkJUMFFzVVVGQlUzRkRMRWRCUnk5RGNFTXNSVUZCVDBRc1VVTnFRbEp4UXl4RFFVRnZRaXhOSWl3aVptbHNaU0k2SW0xaGFXNHVhbk1pTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJb1puVnVZM1JwYjI0Z2QyVmljR0ZqYTFWdWFYWmxjbk5oYkUxdlpIVnNaVVJsWm1sdWFYUnBiMjRvY205dmRDd2dabUZqZEc5eWVTa2dlMXh1WEhScFppaDBlWEJsYjJZZ1pYaHdiM0owY3lBOVBUMGdKMjlpYW1WamRDY2dKaVlnZEhsd1pXOW1JRzF2WkhWc1pTQTlQVDBnSjI5aWFtVmpkQ2NwWEc1Y2RGeDBiVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1ZV04wYjNKNUtDazdYRzVjZEdWc2MyVWdhV1lvZEhsd1pXOW1JR1JsWm1sdVpTQTlQVDBnSjJaMWJtTjBhVzl1SnlBbUppQmtaV1pwYm1VdVlXMWtLVnh1WEhSY2RHUmxabWx1WlNoYlhTd2dabUZqZEc5eWVTazdYRzVjZEdWc2MyVWdhV1lvZEhsd1pXOW1JR1Y0Y0c5eWRITWdQVDA5SUNkdlltcGxZM1FuS1Z4dVhIUmNkR1Y0Y0c5eWRITmJYQ0p4ZFdsc2JHcHpMWEJoY25ObGNsd2lYU0E5SUdaaFkzUnZjbmtvS1R0Y2JseDBaV3h6WlZ4dVhIUmNkSEp2YjNSYlhDSnhkV2xzYkdwekxYQmhjbk5sY2x3aVhTQTlJR1poWTNSdmNua29LVHRjYm4wcEtITmxiR1lzSUdaMWJtTjBhVzl1S0NrZ2UxeHVjbVYwZFhKdUlDSXNJbVY0Y0c5eWRDQnBiblJsY21aaFkyVWdTVzV6WlhKMFJXMWlaV1FnZTF4dUlDQWdJR2x0WVdkbFB6b2djM1J5YVc1bk8xeHVJQ0FnSUdadmNtMTFiR0UvT2lCemRISnBibWM3WEc0Z0lDQWdkbWxrWlc4L09pQnpkSEpwYm1jN1hHNTlYRzVjYm1WNGNHOXlkQ0JwYm5SbGNtWmhZMlVnVW5WdVFYUjBjbWxpZFhSbGN5QjdYRzRnSUNBZ2MyTnlhWEIwUHpvZ0ozTjFjR1Z5SnlCOElDZHpkV0luTzF4dUlDQWdJR052Ykc5eVB6b2djM1J5YVc1bk8xeHVJQ0FnSUdKaFkydG5jbTkxYm1RL09pQnpkSEpwYm1jN1hHNGdJQ0FnWW05c1pEODZJR0p2YjJ4bFlXNDdYRzRnSUNBZ2FYUmhiR2xqUHpvZ1ltOXZiR1ZoYmp0Y2JpQWdJQ0IxYm1SbGNteHBibVUvT2lCaWIyOXNaV0Z1TzF4dUlDQWdJSE4wY21sclpUODZJR0p2YjJ4bFlXNDdYRzRnSUNBZ1ptOXVkRDg2SUhOMGNtbHVaenRjYmlBZ0lDQnNhVzVyUHpvZ2MzUnlhVzVuTzF4dUlDQWdJSE5wZW1VL09pQW5jMjFoYkd3bklId2dKMnhoY21kbEp5QjhJQ2RvZFdkbEp6dGNibjFjYmx4dVpYaHdiM0owSUdsdWRHVnlabUZqWlNCTWFXNWxRWFIwY21saWRYUmxjeUI3WEc0Z0lDQWdhR1ZoWkdWeVB6b2dNU0I4SURJN1hHNGdJQ0FnWkdseVpXTjBhVzl1UHpvZ0ozSjBiQ2M3WEc0Z0lDQWdZV3hwWjI0L09pQW5jbWxuYUhRbklId2dKMnhsWm5RbklId2dKMk5sYm5SbGNpY2dmQ0FuYW5WemRHbG1lU2M3WEc0Z0lDQWdhVzVrWlc1MFB6b2diblZ0WW1WeU8xeHVJQ0FnSUdKc2IyTnJjWFZ2ZEdVL09pQmliMjlzWldGdU8xeHVJQ0FnSUd4cGMzUS9PaUFuYjNKa1pYSmxaQ2NnZkNBblluVnNiR1YwSnp0Y2JpQWdJQ0JjSW1OdlpHVXRZbXh2WTJ0Y0lqODZJR0p2YjJ4bFlXNDdYRzU5WEc1Y2JtbHVkR1Z5Wm1GalpTQkJkSFJ5YVdKMWRHVnpJR1Y0ZEdWdVpITWdVblZ1UVhSMGNtbGlkWFJsY3l3Z1RHbHVaVUYwZEhKcFluVjBaWE1nZTMxY2JseHVhVzUwWlhKbVlXTmxJRkYxYVd4c1QzQWdlMXh1SUNBZ0lHbHVjMlZ5ZEQ4NklITjBjbWx1WnlCOElFbHVjMlZ5ZEVWdFltVmtPMXh1SUNBZ0lHRjBkSEpwWW5WMFpYTS9PaUJCZEhSeWFXSjFkR1Z6TzF4dUlDQWdJR3hwYm1WQmRIUnlhV0oxZEdWelB6b2dUR2x1WlVGMGRISnBZblYwWlhNN1hHNGdJQ0FnY25WdVFYUjBjbWxpZFhSbGN6ODZJRkoxYmtGMGRISnBZblYwWlhNN1hHNTlYRzVjYm1WNGNHOXlkQ0JwYm5SbGNtWmhZMlVnVW1GM1VYVnBiR3hFWld4MFlTQjdYRzRnSUNBZ2IzQnpPaUJSZFdsc2JFOXdXMTA3WEc1OVhHNWNiaTh2SUU5VlZGQlZWRnh1WEc1bGVIQnZjblFnYVc1MFpYSm1ZV05sSUZSbGVIUlNkVzRnZTF4dUlDQWdJSFJsZUhRNklITjBjbWx1Wnp0Y2JpQWdJQ0JoZEhSeWFXSjFkR1Z6UHpvZ1VuVnVRWFIwY21saWRYUmxjenRjYm4xY2JseHVaWGh3YjNKMElHbHVkR1Z5Wm1GalpTQlFZWEpoWjNKaGNHZ2dlMXh1SUNBZ0lIUmxlSFJTZFc1elB6b2dLRlJsZUhSU2RXNGdmQ0I3SUdadmNtMTFiR0U2SUhOMGNtbHVaeUI5S1Z0ZE8xeHVJQ0FnSUdWdFltVmtQem9nU1c1elpYSjBSVzFpWldRN1hHNGdJQ0FnWVhSMGNtbGlkWFJsY3o4NklFeHBibVZCZEhSeWFXSjFkR1Z6TzF4dWZWeHVYRzVsZUhCdmNuUWdhVzUwWlhKbVlXTmxJRkZJZVhCbGNreHBibXNnZTF4dUlDQWdJSFJsZUhRNklITjBjbWx1Wnp0Y2JpQWdJQ0JzYVc1ck9pQnpkSEpwYm1jN1hHNTlYRzVjYm1WNGNHOXlkQ0JwYm5SbGNtWmhZMlVnVTJWMGRYQkpibVp2SUh0Y2JpQWdJQ0J1ZFcxaVpYSmxaRXhwYzNSek9pQnVkVzFpWlhJN1hHNGdJQ0FnYUhsd1pYSnNhVzVyY3pvZ1VVaDVjR1Z5VEdsdWExdGRPMXh1ZlZ4dVhHNWxlSEJ2Y25RZ2FXNTBaWEptWVdObElGQmhjbk5sWkZGMWFXeHNSR1ZzZEdFZ2UxeHVJQ0FnSUhCaGNtRm5jbUZ3YUhNNklGQmhjbUZuY21Gd2FGdGRPMXh1SUNBZ0lITmxkSFZ3T2lCVFpYUjFjRWx1Wm04N1hHNTlYRzVjYmk4dklFWjFibU4wYVc5dWMxeHViR1YwSUdGamRHbDJaVTUxYldKbGNtVmtUR2x6ZENBOUlHWmhiSE5sTzF4dVhHNWxlSEJ2Y25RZ1puVnVZM1JwYjI0Z2NHRnljMlZSZFdsc2JFUmxiSFJoS0hGMWFXeHNPaUJTWVhkUmRXbHNiRVJsYkhSaEtUb2dVR0Z5YzJWa1VYVnBiR3hFWld4MFlTQjdYRzRnSUNBZ1lXTjBhWFpsVG5WdFltVnlaV1JNYVhOMElEMGdabUZzYzJVN1hHNGdJQ0FnWTI5dWMzUWdjR0Z5YzJWa09pQlFZWEp6WldSUmRXbHNiRVJsYkhSaElEMGdlMXh1SUNBZ0lDQWdJQ0J3WVhKaFozSmhjR2h6T2lCYlhTeGNiaUFnSUNBZ0lDQWdjMlYwZFhBNklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc1MWJXSmxjbVZrVEdsemRITTZJREFzWEc0Z0lDQWdJQ0FnSUNBZ0lDQm9lWEJsY214cGJtdHpPaUJiWFZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnZlR0Y2JpQWdJQ0JtYjNJZ0tHTnZibk4wSUc5d0lHOW1JSEYxYVd4c0xtOXdjeWtnZTF4dUlDQWdJQ0FnSUNCd1lYSnpaVTl3S0c5d0xDQndZWEp6WldRcE8xeHVJQ0FnSUgwN1hHNGdJQ0FnY21WMGRYSnVJSEJoY25ObFpEdGNibjFjYmx4dVhHNW1kVzVqZEdsdmJpQndZWEp6WlU5d0tHOXdPaUJSZFdsc2JFOXdMQ0J3WVhKelpXUTZJRkJoY25ObFpGRjFhV3hzUkdWc2RHRXBJSHRjYmlBZ0lDQXZMeUJvWVc1a2JHVWdkbWxrWlc5eklHRnVaQ0JwYldGblpYTmNiaUFnSUNCcFppQW9LRzl3TG1sdWMyVnlkQ0JoY3lCSmJuTmxjblJGYldKbFpDa3VkbWxrWlc4Z2ZId2dLRzl3TG1sdWMyVnlkQ0JoY3lCSmJuTmxjblJGYldKbFpDa3VhVzFoWjJVcElIdGNiaUFnSUNBZ0lDQWdhVzV6WlhKMFJXMWlaV1JRWVhKaFozSmhjR2dvYjNBc0lIQmhjbk5sWkNrN1hHNGdJQ0FnTHk4Z2FHRnVaR3hsSUdadmNtMTFiR0Z6WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2dvYjNBdWFXNXpaWEowSUdGeklFbHVjMlZ5ZEVWdFltVmtLUzVtYjNKdGRXeGhLU0I3WEc0Z0lDQWdJQ0FnSUdsdWMyVnlkRVp2Y20xMWJHRW9iM0FzSUhCaGNuTmxaQ2s3WEc0Z0lDQWdMeThnYUdGdVpHeGxJR1Y0WTJ4MWMybDJaU0J1Wlhkc2FXNWxjMXh1SUNBZ0lIMGdaV3h6WlNCcFppQW9iM0F1YVc1elpYSjBJRDA5UFNBblhGeHVKeWtnZTF4dUlDQWdJQ0FnSUNCcGJuTmxjblJPWlhkc2FXNWxLRzl3TENCd1lYSnpaV1FwTzF4dUlDQWdJQzh2SUdoaGJtUnNaU0IwWlhoMElHRnVaQ0IwWlhoMElIZHBkR2dnYm1WM2JHbHVaWE1nYVc1MFpYSnRhWGhsWkZ4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJR2x1YzJWeWRGUmxlSFFvYjNBc0lIQmhjbk5sWkNrN1hHNGdJQ0FnZlZ4dWZWeHVYRzR2THlCcGJuTmxjblFnWVNCaWJHRnVheUJ3WVhKaFozSmhjR2hjYm1aMWJtTjBhVzl1SUhOMFlYSjBUbVYzVUdGeVlXZHlZWEJvS0hCaGNuTmxaRG9nVUdGeWMyVmtVWFZwYkd4RVpXeDBZU2tnZTF4dUlDQWdJSEJoY25ObFpDNXdZWEpoWjNKaGNHaHpMbkIxYzJnb2UxeHVJQ0FnSUNBZ0lDQjBaWGgwVW5WdWN6b2dXMTFjYmlBZ0lDQjlLVHRjYm4xY2JseHVMeThnYVc1elpYSjBjeUJoSUhacFpHVnZJRzl5SUdsdFlXZGxJR1Z0WW1Wa1hHNW1kVzVqZEdsdmJpQnBibk5sY25SRmJXSmxaRkJoY21GbmNtRndhQ2h2Y0RvZ1VYVnBiR3hQY0N3Z2NHRnljMlZrT2lCUVlYSnpaV1JSZFdsc2JFUmxiSFJoS1NCN1hHNGdJQ0FnY0dGeWMyVmtMbkJoY21GbmNtRndhSE11Y0hWemFDaDdYRzRnSUNBZ0lDQWdJR1Z0WW1Wa09pQnZjQzVwYm5ObGNuUWdZWE1nU1c1elpYSjBSVzFpWldSY2JpQWdJQ0I5S1R0Y2JpQWdJQ0JoWTNScGRtVk9kVzFpWlhKbFpFeHBjM1FnUFNCbVlXeHpaVHRjYmlBZ0lDQnpkR0Z5ZEU1bGQxQmhjbUZuY21Gd2FDaHdZWEp6WldRcE8xeHVmVnh1WEc0dkx5QnBibk5sY25SeklHRWdabTl5YlhWc1lTQmxiV0psWkZ4dVpuVnVZM1JwYjI0Z2FXNXpaWEowUm05eWJYVnNZU2h2Y0RvZ1VYVnBiR3hQY0N3Z2NHRnljMlZrT2lCUVlYSnpaV1JSZFdsc2JFUmxiSFJoS1NCN1hHNGdJQ0FnYVdZZ0tIQmhjbk5sWkM1d1lYSmhaM0poY0doekxteGxibWQwYUNBOVBUMGdNQ2tnZTF4dUlDQWdJQ0FnSUNCemRHRnlkRTVsZDFCaGNtRm5jbUZ3YUNod1lYSnpaV1FwTzF4dUlDQWdJSDFjYmlBZ0lDQndZWEp6WldRdWNHRnlZV2R5WVhCb2MxdHdZWEp6WldRdWNHRnlZV2R5WVhCb2N5NXNaVzVuZEdndE1WMHVkR1Y0ZEZKMWJuTS9MbkIxYzJnb2UxeHVJQ0FnSUNBZ0lDQm1iM0p0ZFd4aE9pQW9iM0F1YVc1elpYSjBJR0Z6SUVsdWMyVnlkRVZ0WW1Wa0tTNW1iM0p0ZFd4aElTeGNiaUFnSUNBZ0lDQWdZWFIwY21saWRYUmxjem9nYjNBdVlYUjBjbWxpZFhSbGMxeHVJQ0FnSUgwcE8xeHVmVnh1WEc0dkx5QnBibk5sY25SeklHRWdibVYzSUhCaGNtRm5jbUZ3YUNCaGJtUWdZWEJ3YkdsbGN5QnNhVzVsSUdadmNtMWhkSFJwYm1kY2JtWjFibU4wYVc5dUlHbHVjMlZ5ZEU1bGQyeHBibVVvYjNBNklGRjFhV3hzVDNBc0lIQmhjbk5sWkRvZ1VHRnljMlZrVVhWcGJHeEVaV3gwWVNrZ2UxeHVJQ0FnSUM4dklHbG1JR3hwYm1VZ1lYUjBjbWxpZFhSbGN5d2dZWEJ3YkhrZ2RHaHZjMlVnZEc4Z2RHaGxJSEJ5WlhacGIzVnpJSEJoY21GbmNtRndhRnh1SUNBZ0lHbG1JQ2h2Y0M1aGRIUnlhV0oxZEdWektTQjdYRzRnSUNBZ0lDQWdJSEJoY25ObFpDNXdZWEpoWjNKaGNHaHpXM0JoY25ObFpDNXdZWEpoWjNKaGNHaHpMbXhsYm1kMGFDMHhYUzVoZEhSeWFXSjFkR1Z6SUQwZ2IzQXVZWFIwY21saWRYUmxjenRjYmlBZ0lDQWdJQ0FnYVdZZ0tHOXdMbUYwZEhKcFluVjBaWE11YkdsemRDQTlQVDBnSjI5eVpHVnlaV1FuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCcFppQmhiSEpsWVdSNUlHRnVJR0ZqZEdsMlpTQnVkVzFpWlhKbFpDQnNhWE4wWEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWVdOMGFYWmxUblZ0WW1WeVpXUk1hWE4wS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdaRzhnYm05MElHbHVZM0psYldWdWRDQmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJzWldGMlpTQmhZM1JwZG1VZ2JHbHpkQ0IwY25WbFhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUdsdVkzSmxiV1Z0Ym5SY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkx5QnpaWFFnWVdOMGFYWmxJSFJ2SUhSeWRXVmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZWEp6WldRdWMyVjBkWEF1Ym5WdFltVnlaV1JNYVhOMGN5c3JPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0ZqZEdsMlpVNTFiV0psY21Wa1RHbHpkQ0E5SUhSeWRXVTdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoWTNScGRtVk9kVzFpWlhKbFpFeHBjM1FnUFNCbVlXeHpaVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQnpkR0Z5ZEU1bGQxQmhjbUZuY21Gd2FDaHdZWEp6WldRcE8xeHVmVnh1WEc0dkx5QnBibk5sY25SeklIUmxlSFFnZDJsMGFDQnBiblJsY20xcGVHVmtJRzVsZDJ4cGJtVnpJR0Z1WkNCeWRXNGdZWFIwY21saWRYUmxjMXh1Wm5WdVkzUnBiMjRnYVc1elpYSjBWR1Y0ZENodmNEb2dVWFZwYkd4UGNDd2djR0Z5YzJWa09pQlFZWEp6WldSUmRXbHNiRVJsYkhSaEtTQjdYRzRnSUNBZ2FXWWdLSEJoY25ObFpDNXdZWEpoWjNKaGNHaHpMbXhsYm1kMGFDQTlQVDBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQnpkR0Z5ZEU1bGQxQmhjbUZuY21Gd2FDaHdZWEp6WldRcE8xeHVJQ0FnSUgxY2JpQWdJQ0F2THlCcFppQnBkQ0JqYjI1MFlXbHVjeUJ1Wlhkc2FXNWxJR05vWVhKaFkzUmxjbk5jYmlBZ0lDQnBaaUFvS0c5d0xtbHVjMlZ5ZENCaGN5QnpkSEpwYm1jcExtMWhkR05vS0M5Y1hHNHZLU2tnZTF4dUlDQWdJQ0FnSUNCamIyNXpkQ0J6ZEhKcGJtZHpJRDBnYzNCc2FYUlRkSEpwYm1kektDaHZjQzVwYm5ObGNuUWdZWE1nYzNSeWFXNW5LU2s3WEc0Z0lDQWdJQ0FnSUdadmNpQW9ZMjl1YzNRZ2RHVjRkQ0J2WmlCemRISnBibWR6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHVjRkQ0E5UFQwZ0oxeGNiaWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRHRnlkRTVsZDFCaGNtRm5jbUZ3YUNod1lYSnpaV1FwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdGamRHbDJaVTUxYldKbGNtVmtUR2x6ZENBOUlHWmhiSE5sTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBibk5sY25SVGFXMXdiR1ZUZEhKcGJtY29kR1Y0ZEN3Z2NHRnljMlZrS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0JwYm5ObGNuUlRhVzF3YkdWVGRISnBibWNvYjNBdWFXNXpaWEowSUdGeklITjBjbWx1Wnl3Z2NHRnljMlZrTENCdmNDNWhkSFJ5YVdKMWRHVnpLVHRjYmlBZ0lDQjlYRzU5WEc1Y2JpOHZJR2x1YzJWeWRITWdjMmx0Y0d4bElITjBjbWx1WnlCM2FYUm9JR0YwZEhKcFluVjBaWE5jYm1aMWJtTjBhVzl1SUdsdWMyVnlkRk5wYlhCc1pWTjBjbWx1WnloMFpYaDBPaUJ6ZEhKcGJtY3NJSEJoY25ObFpEb2dVR0Z5YzJWa1VYVnBiR3hFWld4MFlTd2dZWFIwY21saWRYUmxjejg2SUZKMWJrRjBkSEpwWW5WMFpYTXBJSHRjYmlBZ0lDQnBaaUFvWVhSMGNtbGlkWFJsY3lrZ2UxeHVJQ0FnSUNBZ0lDQndZWEp6WldRdWNHRnlZV2R5WVhCb2MxdHdZWEp6WldRdWNHRnlZV2R5WVhCb2N5NXNaVzVuZEdndE1WMHVkR1Y0ZEZKMWJuTS9MbkIxYzJnb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGREb2dkR1Y0ZEN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR0YwZEhKcFluVjBaWE02SUdGMGRISnBZblYwWlhOY2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJR2xtSUNoaGRIUnlhV0oxZEdWekxteHBibXNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoY25ObFpDNXpaWFIxY0M1b2VYQmxjbXhwYm10ekxuQjFjMmdvZXlCMFpYaDBPaUIwWlhoMExDQnNhVzVyT2lCaGRIUnlhV0oxZEdWekxteHBibXNnZlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCd1lYSnpaV1F1Y0dGeVlXZHlZWEJvYzF0d1lYSnpaV1F1Y0dGeVlXZHlZWEJvY3k1c1pXNW5kR2d0TVYwdWRHVjRkRkoxYm5NL0xuQjFjMmdvZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkR1Y0ZERvZ2RHVjRkRnh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0I5WEc1OVhHNWNiaTh2SUhOd2JHbDBjeUJ6ZEhKcGJtZHpJRzl1SUdWMlpYSjVJRzVsZDJ4cGJtVWdZMmhoY21GamRHVnlMQ0JyWldWd2FXNW5JSFJvWlNCdVpYZHNhVzVsSUdOb1lYSmhZM1JsY25NN0lISmxkSFZ5Ym5NZ1lYSnlZWGxjYm1aMWJtTjBhVzl1SUhOd2JHbDBVM1J5YVc1bmN5aHpkSEpwYm1jNklITjBjbWx1WnlrNklITjBjbWx1WjF0ZElIdGNiaUFnSUNCeVpYUjFjbTRnYzNSeWFXNW5Mbk53YkdsMEtDOG9YRnh1S1M4cE8xeHVmVnh1WEc1Y2JseHVJaXdpTHk4Z1ZHaGxJRzF2WkhWc1pTQmpZV05vWlZ4dWRtRnlJRjlmZDJWaWNHRmphMTl0YjJSMWJHVmZZMkZqYUdWZlh5QTlJSHQ5TzF4dVhHNHZMeUJVYUdVZ2NtVnhkV2x5WlNCbWRXNWpkR2x2Ymx4dVpuVnVZM1JwYjI0Z1gxOTNaV0p3WVdOclgzSmxjWFZwY21WZlh5aHRiMlIxYkdWSlpDa2dlMXh1WEhRdkx5QkRhR1ZqYXlCcFppQnRiMlIxYkdVZ2FYTWdhVzRnWTJGamFHVmNibHgwYVdZb1gxOTNaV0p3WVdOclgyMXZaSFZzWlY5allXTm9aVjlmVzIxdlpIVnNaVWxrWFNrZ2UxeHVYSFJjZEhKbGRIVnliaUJmWDNkbFluQmhZMnRmYlc5a2RXeGxYMk5oWTJobFgxOWJiVzlrZFd4bFNXUmRMbVY0Y0c5eWRITTdYRzVjZEgxY2JseDBMeThnUTNKbFlYUmxJR0VnYm1WM0lHMXZaSFZzWlNBb1lXNWtJSEIxZENCcGRDQnBiblJ2SUhSb1pTQmpZV05vWlNsY2JseDBkbUZ5SUcxdlpIVnNaU0E5SUY5ZmQyVmljR0ZqYTE5dGIyUjFiR1ZmWTJGamFHVmZYMXR0YjJSMWJHVkpaRjBnUFNCN1hHNWNkRngwTHk4Z2JtOGdiVzlrZFd4bExtbGtJRzVsWldSbFpGeHVYSFJjZEM4dklHNXZJRzF2WkhWc1pTNXNiMkZrWldRZ2JtVmxaR1ZrWEc1Y2RGeDBaWGh3YjNKMGN6b2dlMzFjYmx4MGZUdGNibHh1WEhRdkx5QkZlR1ZqZFhSbElIUm9aU0J0YjJSMWJHVWdablZ1WTNScGIyNWNibHgwWDE5M1pXSndZV05yWDIxdlpIVnNaWE5mWDF0dGIyUjFiR1ZKWkYwb2JXOWtkV3hsTENCdGIyUjFiR1V1Wlhod2IzSjBjeXdnWDE5M1pXSndZV05yWDNKbGNYVnBjbVZmWHlrN1hHNWNibHgwTHk4Z1VtVjBkWEp1SUhSb1pTQmxlSEJ2Y25SeklHOW1JSFJvWlNCdGIyUjFiR1ZjYmx4MGNtVjBkWEp1SUcxdlpIVnNaUzVsZUhCdmNuUnpPMXh1ZlZ4dVhHNGlMQ0l2THlCdGIyUjFiR1VnWlhod2IzSjBjeUJ0ZFhOMElHSmxJSEpsZEhWeWJtVmtJR1p5YjIwZ2NuVnVkR2x0WlNCemJ5QmxiblJ5ZVNCcGJteHBibWx1WnlCcGN5QmthWE5oWW14bFpGeHVMeThnYzNSaGNuUjFjRnh1THk4Z1RHOWhaQ0JsYm5SeWVTQnRiMlIxYkdVZ1lXNWtJSEpsZEhWeWJpQmxlSEJ2Y25SelhHNXlaWFIxY200Z1gxOTNaV0p3WVdOclgzSmxjWFZwY21WZlh5ZzJNRGNwTzF4dUlsMHNJbk52ZFhKalpWSnZiM1FpT2lJaWZRPT0iLCJpbXBvcnQgeyBBbGlnbm1lbnRUeXBlIH0gZnJvbSAnZG9jeCc7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0U3R5bGVzID0gW3tcbiAgICBpZDogJ25vcm1hbCcsXG4gICAgbmFtZTogJ05vcm1hbCcsXG4gICAgbmV4dDogJ25vcm1hbCcsXG4gICAgYmFzZWRPbjogJ25vcm1hbCcsXG4gICAgcXVpY2tGb3JtYXQ6IHRydWUsXG4gICAgcnVuOiB7XG4gICAgICBzaXplOiAyNFxuICAgIH0sXG4gICAgcGFyYWdyYXBoOiB7XG4gICAgICBzcGFjaW5nOiB7XG4gICAgICAgIGxpbmU6IDQ4MCxcbiAgICAgICAgYmVmb3JlOiAwLFxuICAgICAgICBhZnRlcjogMFxuICAgICAgfVxuICAgIH1cbiAgfSx7XG4gICAgaWQ6ICdoZWFkZXJfMScsXG4gICAgbmFtZTogJ0hlYWRpbmcgMScsXG4gICAgbmV4dDogJ25vcm1hbCcsXG4gICAgcXVpY2tGb3JtYXQ6IHRydWUsXG4gICAgcnVuOiB7XG4gICAgICBmb250OiAnQ2FsaWJyaScsXG4gICAgICBzaXplOiAzMCxcbiAgICAgIGJvbGQ6IHRydWVcbiAgICB9LFxuICAgIHBhcmFncmFwaDoge1xuICAgICAgc3BhY2luZzoge1xuICAgICAgICBiZWZvcmU6IDMwMCxcbiAgICAgICAgYWZ0ZXI6IDIwMFxuICAgICAgfVxuICAgIH1cbiAgfSx7XG4gICAgaWQ6ICdoZWFkZXJfMicsXG4gICAgbmFtZTogJ0hlYWRpbmcgMicsXG4gICAgYmFzZWRPbjogJ25vcm1hbCcsXG4gICAgbmV4dDogJ25vcm1hbCcsXG4gICAgcXVpY2tGb3JtYXQ6IHRydWUsXG4gICAgcnVuOiB7XG4gICAgICBmb250OiAnQ2FsaWJyaScsXG4gICAgICBzaXplOiAyNixcbiAgICAgIGJvbGQ6IHRydWVcbiAgICB9LFxuICAgIHBhcmFncmFwaDoge1xuICAgICAgc3BhY2luZzoge1xuICAgICAgICBiZWZvcmU6IDIwMCxcbiAgICAgICAgYWZ0ZXI6IDEwMFxuICAgICAgfVxuICAgIH1cbiAgfSx7XG4gICAgaWQ6ICdsaXN0X3BhcmFncmFwaCcsXG4gICAgbmFtZTogJ0xpc3QgUGFyYWdyYXBoJyxcbiAgICBiYXNlZE9uOiAnbm9ybWFsJyxcbiAgICBxdWlja0Zvcm1hdDogdHJ1ZSxcbiAgICBydW46IHtcbiAgICAgIHNpemU6IDI0XG4gICAgfVxuICB9LHtcbiAgICBpZDogJ2NvZGVfYmxvY2snLFxuICAgIG5hbWU6ICdDb2RlIEJsb2NrJyxcbiAgICBiYXNlZE9uOiAnbm9ybWFsJyxcbiAgICBxdWlja0Zvcm1hdDogdHJ1ZSxcbiAgICBydW46IHtcbiAgICAgIHNpemU6IDI0LFxuICAgICAgZm9udDogJ0NvdXJpZXIgTmV3J1xuICAgIH0sXG4gICAgcGFyYWdyYXBoOiB7XG4gICAgICBpbmRlbnQ6IHsgbGVmdDogNzIwLCByaWdodDogNzIwIH1cbiAgICB9XG4gIH0se1xuICAgIGlkOiAnYmxvY2tfcXVvdGUnLFxuICAgIG5hbWU6ICdCbG9jayBRdW90ZScsXG4gICAgYmFzZWRPbjogJ25vcm1hbCcsXG4gICAgcXVpY2tGb3JtYXQ6IHRydWUsXG4gICAgcnVuOiB7XG4gICAgICBpdGFsaWNzOiB0cnVlXG4gICAgfSxcbiAgICBwYXJhZ3JhcGg6IHtcbiAgICAgIGluZGVudDogeyBsZWZ0OiA1NDAgfSxcbiAgICAgIGJvcmRlcjoge1xuICAgICAgICBsZWZ0OiB7XG4gICAgICAgICAgc2l6ZTogMTIsXG4gICAgICAgICAgc3BhY2U6IDI4LFxuICAgICAgICAgIGNvbG9yOiAnMzMzMzMzJyxcbiAgICAgICAgICB2YWx1ZTogJ3NpbmdsZSdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfV07XG4gIFxuZXhwb3J0IGNvbnN0IGN1c3RvbUxldmVscyA9IFt7XG4gICAgbGV2ZWw6IDAsXG4gICAgZm9ybWF0OiAnZGVjaW1hbCcsXG4gICAgdGV4dDogJyUxLicsXG4gICAgYWxpZ25tZW50OiBBbGlnbm1lbnRUeXBlLkxFRlQsXG4gICAgc3R5bGU6IHtcbiAgICBwYXJhZ3JhcGg6IHtcbiAgICAgICAgaW5kZW50OiB7IGxlZnQ6IDcyMCwgaGFuZ2luZzogMzYwIH1cbiAgICB9XG4gICAgfVxufSx7XG4gICAgbGV2ZWw6IDEsXG4gICAgZm9ybWF0OiAnbG93ZXJMZXR0ZXInLFxuICAgIHRleHQ6ICclMi4nLFxuICAgIGFsaWdubWVudDogQWxpZ25tZW50VHlwZS5MRUZULFxuICAgIHN0eWxlOiB7XG4gICAgcGFyYWdyYXBoOiB7XG4gICAgICAgIGluZGVudDogeyBsZWZ0OiAxNDQwLCBoYW5naW5nOiAzNjAgfVxuICAgIH1cbiAgICB9XG59LHtcbiAgICBsZXZlbDogMixcbiAgICBmb3JtYXQ6ICdsb3dlclJvbWFuJyxcbiAgICB0ZXh0OiAnJTMuJyxcbiAgICBhbGlnbm1lbnQ6IEFsaWdubWVudFR5cGUuTEVGVCxcbiAgICBzdHlsZToge1xuICAgIHBhcmFncmFwaDoge1xuICAgICAgICBpbmRlbnQ6IHsgbGVmdDogMjE2MCwgaGFuZ2luZzogMzYwIH1cbiAgICB9XG4gICAgfVxufSx7XG4gICAgbGV2ZWw6IDMsXG4gICAgZm9ybWF0OiAnZGVjaW1hbCcsXG4gICAgdGV4dDogJyU0LicsXG4gICAgYWxpZ25tZW50OiBBbGlnbm1lbnRUeXBlLkxFRlQsXG4gICAgc3R5bGU6IHtcbiAgICBwYXJhZ3JhcGg6IHtcbiAgICAgICAgaW5kZW50OiB7IGxlZnQ6IDI4ODAsIGhhbmdpbmc6IDM2MCB9XG4gICAgfVxuICAgIH1cbn0se1xuICAgIGxldmVsOiA0LFxuICAgIGZvcm1hdDogJ2xvd2VyTGV0dGVyJyxcbiAgICB0ZXh0OiAnJTUuJyxcbiAgICBhbGlnbm1lbnQ6IEFsaWdubWVudFR5cGUuTEVGVCxcbiAgICBzdHlsZToge1xuICAgIHBhcmFncmFwaDoge1xuICAgICAgICBpbmRlbnQ6IHsgbGVmdDogMzYwMCwgaGFuZ2luZzogMzYwIH1cbiAgICB9XG4gICAgfVxufSx7XG4gICAgbGV2ZWw6IDMsXG4gICAgZm9ybWF0OiAnbG93ZXJSb21hbicsXG4gICAgdGV4dDogJyU1LicsXG4gICAgYWxpZ25tZW50OiBBbGlnbm1lbnRUeXBlLkxFRlQsXG4gICAgc3R5bGU6IHtcbiAgICBwYXJhZ3JhcGg6IHtcbiAgICAgICAgaW5kZW50OiB7IGxlZnQ6IDQzMjAsIGhhbmdpbmc6IDM2MCB9XG4gICAgfVxuICAgIH1cbn1dXG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0TnVtYmVyaW5nID0ge1xuICAgIGNvbmZpZzogW3tcbiAgICByZWZlcmVuY2U6ICdkZWZhdWx0LW51bWJlcmluZycsXG4gICAgbGV2ZWxzOiBjdXN0b21MZXZlbHNcbiAgICB9XVxufSIsImltcG9ydCB7IFBhcnNlZFF1aWxsRGVsdGEsIFBhcmFncmFwaCBhcyBRUGFyYWdyYXBoLCBUZXh0UnVuIGFzIFFUZXh0UnVuLCBwYXJzZVF1aWxsRGVsdGEsIFJhd1F1aWxsRGVsdGEsIFFIeXBlckxpbmsgfSBmcm9tICdxdWlsbGpzLXBhcnNlcic7XG5pbXBvcnQgKiBhcyBkb2N4IGZyb20gJ2RvY3gnO1xuaW1wb3J0IHsgQWxpZ25tZW50VHlwZSwgSHlwZXJsaW5rUmVmLCBIeXBlcmxpbmtUeXBlLCBNZWRpYSwgUGFja2VyLCBQYXJhZ3JhcGgsIFRleHRSdW4sIFVuZGVybGluZVR5cGUgfSBmcm9tICdkb2N4JztcbmltcG9ydCB7IGN1c3RvbUxldmVscywgZGVmYXVsdFN0eWxlcyB9IGZyb20gJy4vZGVmYXVsdC1zdHlsZXMnO1xuXG5sZXQgbGlua1RyYWNrZXIgPSAwO1xubGV0IG51bWJlcmVkVHJhY2tlciA9IC0xO1xuXG4vLyBzZXRzIHVwIHRoZSBkb2N4IGRvY3VtZW50XG5mdW5jdGlvbiBzZXR1cERvYyhwYXJzZWREZWx0YTogUGFyc2VkUXVpbGxEZWx0YSk6IGRvY3guRG9jdW1lbnQgIHtcbiAgbGV0IGh5cGVybGlua3M6IGFueSA9IHVuZGVmaW5lZDtcbiAgbGV0IG51bWJlcmluZzogYW55ID0gdW5kZWZpbmVkO1xuICAvLyBidWlsZCB0aGUgaHlwZXJsaW5rcyBwcm9wZXJ0eVxuICBpZiAocGFyc2VkRGVsdGEuc2V0dXAuaHlwZXJsaW5rcy5sZW5ndGggPiAwKSB7XG4gICAgaHlwZXJsaW5rcyA9IGJ1aWxkSHlwZXJsaW5rcyhwYXJzZWREZWx0YS5zZXR1cC5oeXBlcmxpbmtzKTtcbiAgfVxuICAvLyBidWlsZCB0aGUgbnVtYmVyaW5nIHByb3BlcnR5XG4gIGlmIChwYXJzZWREZWx0YS5zZXR1cC5udW1iZXJlZExpc3RzID4gMCkge1xuICAgIG51bWJlcmluZyA9IGJ1aWxkTnVtYmVyaW5nKHBhcnNlZERlbHRhLnNldHVwLm51bWJlcmVkTGlzdHMpO1xuICB9XG4gIGNvbnN0IGRvYyA9IG5ldyBkb2N4LkRvY3VtZW50KHtcbiAgICBzdHlsZXM6IHtcbiAgICAgIHBhcmFncmFwaFN0eWxlczogZGVmYXVsdFN0eWxlc1xuICAgIH0sXG4gICAgbnVtYmVyaW5nOiBudW1iZXJpbmcsXG4gICAgaHlwZXJsaW5rczogaHlwZXJsaW5rc1xuICB9KTtcbiAgcmV0dXJuIGRvYztcbn1cblxuLy8gYnVpbGQgZG9jeCBudW1iZXJpbmcgb2JqZWN0IGZyb20gcXVpbGwgbnVtYmVyZWQgbGlzdHNcbmZ1bmN0aW9uIGJ1aWxkTnVtYmVyaW5nKG51bWJlck9mTGlzdHM6IG51bWJlcik6IHsgY29uZmlnOiBvYmplY3RbXSB9IHtcbiAgbGV0IGNvbmZpZzogYW55W10gPSBbXTtcbiAgbGV0IG51bWJlclRyYWNrZXIgPSAwO1xuICAvLyBjcmVhdGUgYSBuZXcgZG9jeCBudW1iZXJpbmcgb2JqZWN0IGZvciBlYWNoIHF1aWxsIG51bWJlcmVkIGxpc3RcbiAgd2hpbGUgKG51bWJlclRyYWNrZXIgPCBudW1iZXJPZkxpc3RzKSB7XG4gICAgY29uc3QgbmV3TGlzdCA9IHtcbiAgICAgIHJlZmVyZW5jZTogYG51bWJlcmVkXyR7bnVtYmVyVHJhY2tlcn1gLFxuICAgICAgbGV2ZWxzOiBjdXN0b21MZXZlbHNcbiAgICB9O1xuICAgIGNvbmZpZy5wdXNoKG5ld0xpc3QpO1xuICAgIG51bWJlclRyYWNrZXIrKztcbiAgfTtcbiAgY29uc3QgbnVtYmVyQ29uZmlnID0ge1xuICAgIGNvbmZpZzogY29uZmlnXG4gIH07XG4gIHJldHVybiBudW1iZXJDb25maWc7XG59XG5cbi8vIGJ1aWxkIGEgZG9jeCBoeXBlcmxpbmtzIG9iamVjdCBmcm9tIHRoZSBxdWlsbCBoeXBlcmxpbmtzXG5mdW5jdGlvbiBidWlsZEh5cGVybGlua3MocXVpbGxMaW5rczogUUh5cGVyTGlua1tdKTogb2JqZWN0IHtcbiAgbGV0IGh5cGVybGlua3M6IGFueSA9IHt9O1xuICBsZXQgbGlua1RyYWNrZXIgPSAwO1xuICAvLyBnZW5lcmF0ZSBhIG5ldyBkb2N4IGxpbmsgb2JqZWN0IGZyb20gZWFjaCBxdWlsbCBsaW5rOyBtZXJnZSBpbnRvIGh5cGVybGlua3Mgb2JqZWN0XG4gIGZvciAoY29uc3QgbGluayBvZiBxdWlsbExpbmtzKSB7XG4gICAgY29uc3QgZG9jTGluayA9IHtcbiAgICAgIGxpbms6IGxpbmsubGluayxcbiAgICAgIHRleHQ6IGxpbmsudGV4dCxcbiAgICAgIHR5cGU6IEh5cGVybGlua1R5cGUuRVhURVJOQUxcbiAgICB9O1xuICAgIGh5cGVybGlua3MgPSB7XG4gICAgICAuLi5oeXBlcmxpbmtzLFxuICAgICAgW2BsaW5rJHtsaW5rVHJhY2tlcn1gXTogZG9jTGlua1xuICAgIH1cbiAgICBsaW5rVHJhY2tlcisrO1xuICB9O1xuICByZXR1cm4gaHlwZXJsaW5rcztcbn1cblxuLy8gbWFpbiBmdW5jdGlvbiB0byBnZW5lcmF0ZSBkb2N4IGRvY3VtZW50XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVXb3JkKGRlbHRhOiBSYXdRdWlsbERlbHRhIHwgUGFyc2VkUXVpbGxEZWx0YSB8IFBhcnNlZFF1aWxsRGVsdGFbXSk6IFByb21pc2U8ZG9jeC5Eb2N1bWVudD4ge1xuICBjb25zb2xlLmxvZygndGVzdGluZyBzeW1saW5rJyk7XG4gIGxpbmtUcmFja2VyID0gMDtcbiAgbnVtYmVyZWRUcmFja2VyID0gLTE7XG4gIGxldCBkb2M6IGRvY3guRG9jdW1lbnQ7XG4gIC8vIGNyZWF0ZSBhIGNvbnRhaW5lciBmb3IgdGhlIGRvY3ggZG9jIHNlY3Rpb25zXG4gIGNvbnN0IHNlY3Rpb25zOiBQYXJhZ3JhcGhbXVtdID0gW107XG4gIC8vIGNyZWF0ZSBhIGNvbnRhaW5lciBmb3IgdGhlIHBhcnNlZCBRdWlsbCBkZWx0YXNcbiAgY29uc3QgcGFyc2VkRGVsdGFzOiBQYXJzZWRRdWlsbERlbHRhW10gPSBbXTtcbiAgLy8gaWYgaW5wdXQgaXMgYSByYXcgcXVpbGwgZGVsdGFcbiAgaWYgKChkZWx0YSBhcyBSYXdRdWlsbERlbHRhKS5vcHMpIHtcbiAgICBjb25zdCBwYXJzZWREZWx0YSA9IHBhcnNlUXVpbGxEZWx0YShkZWx0YSBhcyBSYXdRdWlsbERlbHRhKTtcbiAgICBwYXJzZWREZWx0YXMucHVzaChwYXJzZWREZWx0YSk7XG4gIC8vIGlmIGlucHV0IGlzIGFuIGFycmF5IG9mIHBhcnNlZCBxdWlsbCBkZWx0YXNcbiAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGRlbHRhKSkge1xuICAgIGZvciAoY29uc3QgZWFjaERlbHRhIG9mIGRlbHRhKSB7XG4gICAgICBwYXJzZWREZWx0YXMucHVzaChlYWNoRGVsdGEpO1xuICAgIH07XG4gIC8vIGlmIGlucHV0IGlzIGEgc2luZ2xlIHBhcnNlZCBxdWlsbCBkZWx0YVxuICB9IGVsc2UgaWYgKChkZWx0YSBhcyBQYXJzZWRRdWlsbERlbHRhKS5wYXJhZ3JhcGhzKSB7XG4gICAgcGFyc2VkRGVsdGFzLnB1c2goZGVsdGEgYXMgUGFyc2VkUXVpbGxEZWx0YSk7XG4gIC8vIGlmIGlucHV0IGlzIG5vdCByZWNvZ25pemVkXG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgcHJvdmlkZSBhIHJhdyBRdWlsbCBEZWx0YSwgYSBwYXJzZWQgUXVpbGwgZGVsdGEsIG9yIGFuIEFycmF5IG9mIHBhcnNlZCBRdWlsbCBkZWx0YXMuIFNlZSBRdWlsbFRvZG9jeCByZWFkbWUuJyk7XG4gIH1cbiAgZG9jID0gc2V0dXBEb2MocGFyc2VkRGVsdGFzWzBdKTtcbiAgLy8gYnVpbGQgZG9jeCBzZWN0aW9uc1xuICBmb3IgKGNvbnN0IGRlbHRhIG9mIHBhcnNlZERlbHRhcykge1xuICAgIC8vIGJ1aWxkIHNlY3Rpb25zXG4gICAgc2VjdGlvbnMucHVzaChidWlsZFNlY3Rpb24oZGVsdGEucGFyYWdyYXBocywgZG9jKSk7XG4gIH07XG4gIC8vIGFkZCBkb2N4IHNlY3Rpb25zIHRvIGRvY1xuICBmb3IgKGNvbnN0IHNlY3Rpb24gb2Ygc2VjdGlvbnMpIHtcbiAgICBkb2MuYWRkU2VjdGlvbih7XG4gICAgICAgIGNoaWxkcmVuOiBzZWN0aW9uXG4gICAgfSk7XG4gIH07XG4gIC8vIGNyZWF0ZSB0aGUgYmxvYlxuICAvLyBjb25zdCBibG9iID0gYXdhaXQgUGFja2VyLnRvQmxvYihkb2MpO1xuICByZXR1cm4gZG9jO1xufVxuXG4vLyBnZW5lcmF0ZSBhIHNlY3Rpb24gYXMgYW4gYXJyYXkgb2YgcGFyYWdyYXBoc1xuZnVuY3Rpb24gYnVpbGRTZWN0aW9uKHF1aWxsUGFyYWdyYXBoczogUVBhcmFncmFwaFtdLCBkb2M6IGRvY3guRG9jdW1lbnQpOiBQYXJhZ3JhcGhbXSB7XG4gIGxldCBxdWlsbFBhcmFncmFwaFRyYWNrZXIgPSAwO1xuICAvLyBjcmVhdGUgYSBjb250YWluZXIgdG8gaG9sZCB0aGUgZG9jeCBwYXJhZ3JhcGhzXG4gIGNvbnN0IHBhcmFncmFwaHM6IFBhcmFncmFwaFtdID0gW107XG4gIC8vIGJ1aWxkIGEgZG9jeCBwYXJhZ3JhcGggZnJvbSBlYWNoIGRlbHRhIHBhcmFncmFwaFxuICBmb3IgKGNvbnN0IHBhcmFncmFwaCBvZiBxdWlsbFBhcmFncmFwaHMpIHtcbiAgICAgIC8vIGlmIGVtYmVkIHZpZGVvIG9yIGltYWdlXG4gICAgICBpZiAocGFyYWdyYXBoLmVtYmVkPy5pbWFnZSkge1xuICAgICAgICBjb25zdCBpbWFnZSA9IE1lZGlhLmFkZEltYWdlKGRvYywgcGFyYWdyYXBoLmVtYmVkLmltYWdlKTtcbiAgICAgICAgcGFyYWdyYXBocy5wdXNoKG5ldyBQYXJhZ3JhcGgoaW1hZ2UpKTtcbiAgICAgIH0gZWxzZSBpZiAocGFyYWdyYXBoLmVtYmVkPy52aWRlbykge1xuICAgICAgICBjb25zdCBydW4gPSBidWlsZFZpZGVvKHBhcmFncmFwaC5lbWJlZC52aWRlbyk7XG4gICAgICAgIHBhcmFncmFwaHMucHVzaChuZXcgUGFyYWdyYXBoKHsgY2hpbGRyZW46IFtydW5dIH0pKTtcbiAgICAgIC8vIGlmIHRleHQgcnVuc1xuICAgICAgfSBlbHNlIGlmIChwYXJhZ3JhcGgudGV4dFJ1bnMpIHtcbiAgICAgICAgLy8gaGFuZGxlIG9yZGVyZWQgbGlzdCB0cmFja2luZ1xuICAgICAgICBpZiAocXVpbGxQYXJhZ3JhcGhUcmFja2VyID4gMCAmJiBwYXJhZ3JhcGguYXR0cmlidXRlcz8ubGlzdCA9PT0gJ29yZGVyZWQnKSB7XG4gICAgICAgICAgaWYgKHF1aWxsUGFyYWdyYXBoc1txdWlsbFBhcmFncmFwaFRyYWNrZXItMV0uYXR0cmlidXRlcz8ubGlzdCA9PT0gJ29yZGVyZWQnKSB7XG4gICAgICAgICAgICBudW1iZXJlZFRyYWNrZXIgPSBudW1iZXJlZFRyYWNrZXI7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG51bWJlcmVkVHJhY2tlcisrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBwYXJhZ3JhcGhzLnB1c2goYnVpbGRQYXJhZ3JhcGgocGFyYWdyYXBoKSk7XG4gICAgICB9XG4gICAgICBxdWlsbFBhcmFncmFwaFRyYWNrZXIrKztcbiAgfTtcbiAgcmV0dXJuIHBhcmFncmFwaHM7XG59XG5cbi8vIGdlbmVyYXRlIGEgcGFyYWdyYXBoIGFzIGFuIGFycmF5IG9mIHRleHQgcnVuc1xuZnVuY3Rpb24gYnVpbGRQYXJhZ3JhcGgocGFyYWdyYXBoOiBRUGFyYWdyYXBoKTogUGFyYWdyYXBoIHtcbiAgLy8gY29udGFpbmVyIHRvIGhvbGQgZG9jeCB0ZXh0IHJ1bnNcbiAgY29uc3QgdGV4dFJ1bnM6IChUZXh0UnVuIHwgSHlwZXJsaW5rUmVmKVtdID0gW107XG4gIC8vIGJ1aWxkIGEgZG9jeCBydW4gZnJvbSBlYWNoIGRlbHRhIHJ1blxuICBmb3IgKGNvbnN0IHJ1biBvZiBwYXJhZ3JhcGgudGV4dFJ1bnMhKSB7XG4gICAgICAvLyBpZiBmb3JtdWxhXG4gICAgICBpZiAoKHJ1biBhcyB7Zm9ybXVsYTogc3RyaW5nfSkuZm9ybXVsYSkge1xuICAgICAgICB0ZXh0UnVucy5wdXNoKGJ1aWxkRm9ybXVsYSgocnVuIGFzIHsgZm9ybXVsYTogc3RyaW5nIH0pLmZvcm11bGEpKTtcbiAgICAgIC8vIGlmIHRleHRcbiAgICAgIH0gZWxzZSBpZiAoKHJ1biBhcyBRVGV4dFJ1bikudGV4dCkge1xuICAgICAgICAgIHRleHRSdW5zLnB1c2goYnVpbGRUZXh0UnVuKHJ1biBhcyBRVGV4dFJ1biwgcGFyYWdyYXBoKSk7XG4gICAgICB9XG4gIH07XG4gIGNvbnN0IGRvY3hQYXJhZ3JhcGggPSBuZXcgUGFyYWdyYXBoKHtcbiAgICBjaGlsZHJlbjogdGV4dFJ1bnMsXG4gICAgaGVhZGluZzogcGFyYWdyYXBoLmF0dHJpYnV0ZXM/LmhlYWRlciA9PT0gMSA/IGRvY3guSGVhZGluZ0xldmVsLkhFQURJTkdfMSA6IHBhcmFncmFwaC5hdHRyaWJ1dGVzPy5oZWFkZXIgPT09IDIgPyBkb2N4LkhlYWRpbmdMZXZlbC5IRUFESU5HXzIgOiB1bmRlZmluZWQsXG4gICAgYnVsbGV0OiBwYXJhZ3JhcGguYXR0cmlidXRlcz8ubGlzdCA9PT0gJ2J1bGxldCcgPyB7IGxldmVsOiBwYXJhZ3JhcGguYXR0cmlidXRlcy5pbmRlbnQgPyBwYXJhZ3JhcGguYXR0cmlidXRlcy5pbmRlbnQgOiAwIH0gOiB1bmRlZmluZWQsXG4gICAgbnVtYmVyaW5nOiBwYXJhZ3JhcGguYXR0cmlidXRlcz8ubGlzdCA9PT0gJ29yZGVyZWQnID8geyByZWZlcmVuY2U6IGBudW1iZXJlZF8ke251bWJlcmVkVHJhY2tlcn1gLCBsZXZlbDogcGFyYWdyYXBoLmF0dHJpYnV0ZXMuaW5kZW50ID8gcGFyYWdyYXBoLmF0dHJpYnV0ZXMuaW5kZW50IDogMCB9IDogdW5kZWZpbmVkLFxuICAgIGFsaWdubWVudDogcGFyYWdyYXBoLmF0dHJpYnV0ZXM/LmFsaWduID09PSAnbGVmdCcgPyBBbGlnbm1lbnRUeXBlLkxFRlQgOiBwYXJhZ3JhcGguYXR0cmlidXRlcz8uYWxpZ24gPT09ICdjZW50ZXInID8gQWxpZ25tZW50VHlwZS5DRU5URVIgOiBwYXJhZ3JhcGguYXR0cmlidXRlcz8uYWxpZ24gPT09ICdyaWdodCcgPyBBbGlnbm1lbnRUeXBlLlJJR0hUIDogcGFyYWdyYXBoLmF0dHJpYnV0ZXM/LmFsaWduID09PSAnanVzdGlmeScgPyBBbGlnbm1lbnRUeXBlLkpVU1RJRklFRCA6IHVuZGVmaW5lZCxcbiAgICBzdHlsZTogcGFyYWdyYXBoLmF0dHJpYnV0ZXM/LlsnY29kZS1ibG9jayddID8gJ2NvZGVfYmxvY2snIDogcGFyYWdyYXBoLmF0dHJpYnV0ZXM/LmJsb2NrcXVvdGUgPyAnYmxvY2tfcXVvdGUnIDogdW5kZWZpbmVkLFxuICAgIC8vIGJpZGlyZWN0aW9uYWw6IHBhcmFncmFwaC5hdHRyaWJ1dGVzPy5kaXJlY3Rpb24gPT09ICdydGwnID8gdHJ1ZSA6IHVuZGVmaW5lZCxcbiAgICAvLyBpbmRlbnRcbiAgfSk7XG4gIHJldHVybiBkb2N4UGFyYWdyYXBoO1xufVxuXG4vLyBnZW5lcmF0ZSBhIGRvY3ggdGV4dCBydW4gZnJvbSBxdWlsbCB0ZXh0IHJ1blxuZnVuY3Rpb24gYnVpbGRUZXh0UnVuKHJ1bjogUVRleHRSdW4sIHBhcmFncmFwaDogUVBhcmFncmFwaCk6IFRleHRSdW4gfCBIeXBlcmxpbmtSZWYge1xuICBsZXQgdGV4dFJ1bjogVGV4dFJ1biB8IEh5cGVybGlua1JlZjtcbiAgaWYgKHJ1bi5hdHRyaWJ1dGVzPy5saW5rKSB7XG4gICAgdGV4dFJ1biA9IG5ldyBIeXBlcmxpbmtSZWYoYGxpbmske2xpbmtUcmFja2VyfWApO1xuICAgIGxpbmtUcmFja2VyKys7XG4gIH0gZWxzZSB7XG4gICAgdGV4dFJ1biA9IG5ldyBUZXh0UnVuKHtcbiAgICAgIHRleHQ6IHJ1bi50ZXh0LFxuICAgICAgYm9sZDogcnVuLmF0dHJpYnV0ZXM/LmJvbGQgPyB0cnVlIDogZmFsc2UsXG4gICAgICBpdGFsaWNzOiBydW4uYXR0cmlidXRlcz8uaXRhbGljID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgc3ViU2NyaXB0OiBydW4uYXR0cmlidXRlcz8uc2NyaXB0ID09PSAnc3ViJyA/IHRydWUgOiBmYWxzZSxcbiAgICAgIHN1cGVyU2NyaXB0OiBydW4uYXR0cmlidXRlcz8uc2NyaXB0ID09PSAnc3VwZXInID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgc3RyaWtlOiBydW4uYXR0cmlidXRlcz8uc3RyaWtlID8gdHJ1ZSA6IGZhbHNlLFxuICAgICAgdW5kZXJsaW5lOiBydW4uYXR0cmlidXRlcz8udW5kZXJsaW5lID8geyB0eXBlOiBVbmRlcmxpbmVUeXBlLlNJTkdMRSwgY29sb3I6ICdhdXRvJyB9IDogdW5kZWZpbmVkLFxuICAgICAgY29sb3I6IHJ1bi5hdHRyaWJ1dGVzPy5jb2xvciA/IHJ1bi5hdHRyaWJ1dGVzPy5jb2xvci5zbGljZSgxKSA6IHVuZGVmaW5lZCxcbiAgICAgIHNpemU6IHJ1bi5hdHRyaWJ1dGVzPy5zaXplID09PSAnaHVnZScgPyAzNiA6IHJ1bi5hdHRyaWJ1dGVzPy5zaXplID09PSAnbGFyZ2UnID8gMzIgOiBydW4uYXR0cmlidXRlcz8uc2l6ZSA9PT0gJ3NtYWxsJyA/IDIwIDogdW5kZWZpbmVkLFxuICAgICAgLy8gcmlnaHRUb0xlZnQ6IHBhcmFncmFwaC5hdHRyaWJ1dGVzPy5kaXJlY3Rpb24gPT09ICdydGwnID8gdHJ1ZSA6IHVuZGVmaW5lZFxuICAgICAgLy8gZm9udFxuICAgICAgaGlnaGxpZ2h0OiBydW4uYXR0cmlidXRlcz8uYmFja2dyb3VuZCA/ICd5ZWxsb3cnIDogdW5kZWZpbmVkXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIHRleHRSdW47XG59XG5cbi8vIGJ1aWxkIGEgZm9ybXVsYVxuZnVuY3Rpb24gYnVpbGRGb3JtdWxhKGZvcm11bGE6IHN0cmluZykge1xuICByZXR1cm4gbmV3IFRleHRSdW4oe1xuICAgIHRleHQ6IGZvcm11bGFcbiAgfSk7XG59XG5cbi8vIGJ1aWxkIGEgdmlkZW9cbmZ1bmN0aW9uIGJ1aWxkVmlkZW8odmlkZW86IHN0cmluZykge1xuICByZXR1cm4gbmV3IFRleHRSdW4oe1xuICAgIHRleHQ6IHZpZGVvXG4gIH0pO1xufVxuIiwibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX182ODdfXzsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHRpZihfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdKSB7XG5cdFx0cmV0dXJuIF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0uZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIG1vZHVsZSBleHBvcnRzIG11c3QgYmUgcmV0dXJuZWQgZnJvbSBydW50aW1lIHNvIGVudHJ5IGlubGluaW5nIGlzIGRpc2FibGVkXG4vLyBzdGFydHVwXG4vLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbnJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDYwNyk7XG4iXSwic291cmNlUm9vdCI6IiJ9